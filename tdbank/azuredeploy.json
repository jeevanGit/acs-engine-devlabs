{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "agentpool1Count": {
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100"
      },
      "type": "int"
    },
    "agentpool1Offset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78,
        79,
        80,
        81,
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
      },
      "type": "int"
    },
    "agentpool1Subnet": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Sets the subnet of agent pool 'agentpool1'."
      },
      "type": "string"
    },
    "agentpool1VMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16s_v3",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2s_v3",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32s_v3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4s_v3",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_D8_v3",
        "Standard_D8s_v3",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16_v3",
        "Standard_E16s_v3",
        "Standard_E2_v3",
        "Standard_E2s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32_v3",
        "Standard_E32s_v3",
        "Standard_E4_v3",
        "Standard_E4s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64_v3",
        "Standard_E64s_v3",
        "Standard_E8_v3",
        "Standard_E8s_v3",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_NC12",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND6s",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "agentpool1osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "agentpool1osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "agentpool1osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "agentpool1osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "agentpool1osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "agentpool1osImageVersion": {
      "defaultValue": "16.04.201804050",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "caPrivateKey": {
      "defaultValue": "",
      "metadata": {
        "description": "The base 64 CA private key used on the master."
      },
      "type": "securestring",
      "defaultValue": ""
    },
    "cloudProviderBackoffRetries": {
      "defaultValue": "",
      "metadata": {
        "description": "If backoff enabled, how many times to retry"
      },
      "type": "string"
    },
    "containerRuntime": {
      "allowedValues": [
        "docker",
        "clear-containers"
      ],
      "defaultValue": "docker",
      "metadata": {
        "description": "The container runtime to use (docker|clear-containers)"
      },
      "type": "string"
    },
    "dockerBridgeCidr": {
      "defaultValue": "172.17.0.1/16",
      "metadata": {
        "description": "Docker bridge network IP address and subnet"
      },
      "type": "string"
    },
    "dockerEngineDownloadRepo": {
      "defaultValue": "https://aptdocker.azureedge.net/repo",
      "metadata": {
        "description": "The docker engine download url for kubernetes."
      },
      "type": "string"
    },
    "dockerEngineVersion": {
      "allowedValues": [
        "17.05.*",
        "17.04.*",
        "17.03.*",
        "1.13.*",
        "1.12.*",
        "1.11.*"
      ],
      "defaultValue": "17.05.*",
      "metadata": {
        "description": "The docker engine version to install."
      },
      "type": "string"
    },
    "etcdDiskSizeGB": {
      "defaultValue": "256",
      "metadata": {
        "description": "Size in GB to allocate for etcd volume"
      },
      "type": "string"
    },
    "etcdVersion": {
      "defaultValue": "3.2.16",
      "metadata": {
        "description": "etcd version"
      },
      "type": "string"
    },
    "firstConsecutiveStaticIP": {
      "defaultValue": "10.255.255.5",
      "metadata": {
        "description": "Sets the static IP of the first master"
      },
      "type": "string"
    },
    "fqdnEndpointSuffix": {
      "defaultValue": "cloudapp.azure.com",
      "metadata": {
        "description": "Endpoint of FQDN."
      },
      "type": "string"
    },
    "gcHighThreshold": {
      "defaultValue": 85,
      "metadata": {
        "description": "High Threshold for Image Garbage collection on each node"
      },
      "type": "int"
    },
    "gcLowThreshold": {
      "defaultValue": 80,
      "metadata": {
        "description": "Low Threshold for Image Garbage collection on each node."
      },
      "type": "int"
    },
    "generatorCode": {
      "defaultValue": "acsengine",
      "metadata": {
        "description": "The generator code used to identify the generator"
      },
      "type": "string"
    },
    "kubeClusterCidr": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Kubernetes cluster subnet"
      },
      "type": "string"
    },
    "kubeDNSServiceIP": {
      "defaultValue": "10.0.0.10",
      "metadata": {
        "description": "Kubernetes DNS IP"
      },
      "type": "string",
      "defaultValue": ""
    },
    "kubeServiceCidr": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Kubernetes service address space"
      },
      "type": "string"
    },
    "kubernetesACIConnectorCPULimit": {
      "defaultValue": "",
      "metadata": {
        "description": "ACI Connector CPU Limit"
      },
      "type": "string"
    },
    "kubernetesACIConnectorCPURequests": {
      "defaultValue": "",
      "metadata": {
        "description": "ACI Connector CPU Requests"
      },
      "type": "string"
    },
    "kubernetesACIConnectorClientId": {
      "defaultValue": "",
      "metadata": {
        "description": "Client id for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorClientKey": {
      "defaultValue": "",
      "metadata": {
        "description": "Client key for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorMemoryLimit": {
      "defaultValue": "",
      "metadata": {
        "description": "ACI Connector Memory Limit"
      },
      "type": "string"
    },
    "kubernetesACIConnectorMemoryRequests": {
      "defaultValue": "",
      "metadata": {
        "description": "ACI Connector Memory Requests"
      },
      "type": "string"
    },
    "kubernetesACIConnectorNodeName": {
      "defaultValue": "",
      "metadata": {
        "description": "Node name for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorOS": {
      "defaultValue": "",
      "metadata": {
        "description": "OS for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorRegion": {
      "defaultValue": "",
      "metadata": {
        "description": "Region for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorSubscriptionId": {
      "defaultValue": "",
      "metadata": {
        "description": "Subscription id for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorTaint": {
      "defaultValue": "",
      "metadata": {
        "description": "Taint for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesACIConnectorTenantId": {
      "defaultValue": "",
      "metadata": {
        "description": "Tenant id for ACI Connector."
      },
      "type": "string"
    },
    "kubernetesCcmImageSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for cloud-controller-manager."
      },
      "type": "string"
    },
    "kubernetesDashboardCPULimit": {
      "defaultValue": "300m",
      "metadata": {
        "description": "Dashboard CPU Limit."
      },
      "type": "string"
    },
    "kubernetesDashboardCPURequests": {
      "defaultValue": "300m",
      "metadata": {
        "description": "Dashboard CPU Requests."
      },
      "type": "string"
    },
    "kubernetesDashboardMemoryLimit": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "Dashboard Memory Limit."
      },
      "type": "string"
    },
    "kubernetesDashboardMemoryRequests": {
      "defaultValue": "150Mi",
      "metadata": {
        "description": "Dashboard Memory Requests."
      },
      "type": "string"
    },
    "kubernetesMetricsServerSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for Metrics Server."
      },
      "type": "string"
    },
    "kubernetesNonMasqueradeCidr": {
      "metadata": {
        "description": "kubernetesNonMasqueradeCidr cluster subnet"
      },
      "type": "string",
      "defaultValue": ""
    },
    "kubernetesPodInfraContainerSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for pod infra."
      },
      "type": "string"
    },
    "kubernetesReschedulerCPULimit": {
      "defaultValue": "",
      "metadata": {
        "description": "Rescheduler CPU Limit."
      },
      "type": "string"
    },
    "kubernetesReschedulerCPURequests": {
      "defaultValue": "",
      "metadata": {
        "description": "Rescheduler CPU Requests."
      },
      "type": "string"
    },
    "kubernetesReschedulerMemoryLimit": {
      "defaultValue": "",
      "metadata": {
        "description": "Rescheduler Memory Limit."
      },
      "type": "string"
    },
    "kubernetesReschedulerMemoryRequests": {
      "defaultValue": "",
      "metadata": {
        "description": "Rescheduler Memory Requests."
      },
      "type": "string"
    },
    "kubernetesReschedulerSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for rescheduler."
      },
      "type": "string"
    },
    "kubernetesTillerCPULimit": {
      "defaultValue": "",
      "metadata": {
        "description": "Helm Tiller CPU Limit."
      },
      "type": "string"
    },
    "kubernetesTillerCPURequests": {
      "defaultValue": "",
      "metadata": {
        "description": "Helm Tiller CPU Requests."
      },
      "type": "string"
    },
    "kubernetesTillerMaxHistory": {
      "defaultValue": "",
      "metadata": {
        "description": "Helm Tiller Max History to Store. '0' for no limit."
      },
      "type": "string"
    },
    "kubernetesTillerMemoryLimit": {
      "defaultValue": "",
      "metadata": {
        "description": "Helm Tiller Memory Limit."
      },
      "type": "string"
    },
    "kubernetesTillerMemoryRequests": {
      "defaultValue": "",
      "metadata": {
        "description": "Helm Tiller Memory Requests."
      },
      "type": "string"
    },
    "kubernetesTillerSpec": {
      "defaultValue": "",
      "metadata": {
        "description": "The container spec for Helm Tiller."
      },
      "type": "string"
    },
    "linuxAdminUsername": {
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      },
      "type": "string",
      "defaultValue": "tdadmin"
    },
    "location": {
      "defaultValue": "",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "masterEndpointDNSNamePrefix": {
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      },
      "type": "string",
      "defaultValue": "tdbank"
    },
    "masterOffset": {
      "allowedValues": [
        0,
        1,
        2,
        3,
        4
      ],
      "defaultValue": 0,
      "metadata": {
        "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
      },
      "type": "int"
    },
    "masterSubnet": {
      "defaultValue": "10.240.0.0/12",
      "metadata": {
        "description": "Sets the subnet of the master node(s)."
      },
      "type": "string"
    },
    "masterVMSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16s_v3",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2s_v3",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32s_v3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4s_v3",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_D8_v3",
        "Standard_D8s_v3",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16_v3",
        "Standard_E16s_v3",
        "Standard_E2_v3",
        "Standard_E2s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32_v3",
        "Standard_E32s_v3",
        "Standard_E4_v3",
        "Standard_E4s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64_v3",
        "Standard_E64s_v3",
        "Standard_E8_v3",
        "Standard_E8s_v3",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_NC12",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND6s",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string",
      "defaultValue": "Standard_D2_v2"
    },
    "maxPods": {
      "defaultValue": 30,
      "metadata": {
        "description": "This param has been deprecated."
      },
      "type": "int"
    },
    "nameSuffix": {
      "metadata": {
        "description": "A string hash of the master DNS name to uniquely identify the cluster."
      },
      "type": "string"
    },
    "networkPolicy": {
      "allowedValues": [
        "none",
        "azure",
        "calico",
        "cilium"
      ],
      "defaultValue": "azure",
      "metadata": {
        "description": "The network policy enforcement to use (none|azure|calico|cilium)"
      },
      "type": "string"
    },
    "orchestratorName": {
      "defaultValue": "k8s",
      "metadata": {
        "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
      },
      "type": "string"
    },
    "osImageName": {
      "defaultValue": "",
      "metadata": {
        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
      },
      "type": "string"
    },
    "osImageOffer": {
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Linux OS image type."
      },
      "type": "string"
    },
    "osImagePublisher": {
      "defaultValue": "Canonical",
      "metadata": {
        "description": "OS image publisher."
      },
      "type": "string"
    },
    "osImageResourceGroup": {
      "defaultValue": "",
      "metadata": {
        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
      },
      "type": "string"
    },
    "osImageSKU": {
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "OS image SKU."
      },
      "type": "string"
    },
    "osImageVersion": {
      "defaultValue": "16.04.201804050",
      "metadata": {
        "description": "OS image version."
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "sshRSAPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      },
      "type": "securestring"
    },
    "targetEnvironment": {
      "defaultValue": "AzurePublicCloud",
      "metadata": {
        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
      },
      "type": "string"
    },
    "vnetCidr": {
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Cluster vnet cidr"
      },
      "type": "string"
    }
  },
  "variables": {
    "agentpool1AccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
    "agentpool1AvailabilitySet": "[concat('agentpool1-availabilitySet-', variables('nameSuffix'))]",
    "agentpool1Count": "[parameters('agentpool1Count')]",
    "agentpool1Index": 0,
    "agentpool1Offset": "[parameters('agentpool1Offset')]",
    "agentpool1StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpool1Index'))]",
    "agentpool1StorageAccountsCount": "[add(div(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),1)))]",
    "agentpool1SubnetName": "[variables('subnetName')]",
    "agentpool1VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpool1-', variables('nameSuffix'), '-')]",
    "agentpool1VMSize": "[parameters('agentpool1VMSize')]",
    "agentpool1VnetSubnetID": "[variables('vnetSubnetID')]",
    "agentpool1osImageName": "[parameters('agentpool1osImageName')]",
    "agentpool1osImageOffer": "[parameters('agentpool1osImageOffer')]",
    "agentpool1osImagePublisher": "[parameters('agentpool1osImagePublisher')]",
    "agentpool1osImageResourceGroup": "[parameters('agentpool1osImageResourceGroup')]",
    "agentpool1osImageSKU": "[parameters('agentpool1osImageSKU')]",
    "agentpool1osImageVersion": "[parameters('agentpool1osImageVersion')]",
    "allocateNodeCidrs": false,
    "apiServerCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUw4ekNDQ2R1Z0F3SUJBZ0lRSDZOdi85dnNtczFLZnJ0aVZ1OWRRekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1qRXlNelUzTWpSYUZ3MHlNREEwTWpBeU16VTNNalJhTUJReApFakFRQmdOVkJBTVRDV0Z3YVhObGNuWmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBTDIzK0FNNVlwbTF2dGJhSUNuMS8zRU1KS3Z5T1ZTL2ZXWXJIRk5nNkQ4MDVjTHRmOWwyRTF1N3JuMHMKOXdHc3AzK0M5WTE0NXJlSlJhOVN5d1RmMVY0UEFiKzJOU0djMXRiS3ZwNi9KMmhnRVpXY1J6aW9udWNweDlObwp4VDNUWUFKcTlGV3E0WVNBbVovc0ZWTUNEU2VwaE9GSGxVVUNZaXlRaDJQN3AweGFBTXUzTHo5WHVQeGhZVFpLCnRIQVhhdkZoTDEzbFdNODExN1dqSHlDajZNQWYxZnBHM3pWS3haQkoyN2Jra1ZuRDdzbjZlTGdtZWdqall4OFQKQXhxSlhXMG5qNW4zVFIrT2RFLzFqVGcweWp1c0w5RDkyOU5sQjBSMERNenBuMEdob3I5ME9FZG5ZMzl1ait2MAo1L083UkhZUUF4bWxTVUZrK3NLeWVhc0VjMmhnUGxnYXFqcGZxaXdranl2dE5aWHg4Nm12Y05pSjNmOVRLTW9VCmFuZUFGa3FWNVZUd3ZSWlVUUU44WlIwUFl1NHdpZGZlOS9idzhqT1d6SitYOEQ2YVVpdW1uWGdIcVlUN0p2aFcKOVYzeGZFR3B5clVNa0g5S2JaK1A0Q1U2bC9KUHpKUHI2dnJlM05aQWhuNDJEYVVrZVVydUVZMmJhUE9YbXVUZgpDS2dHSXBrZG5sc2pXVHYvdVFvNW9qRFMwaHd2VEJCZFY5dm1SQTJ0b05RblI3L2JzekVDMDBzd0JCVURkenVoClhneTBKamh2K1ZqU2JSc3R6OTM2WmhLZUs2dUJlQVVSVm1FdDF0ZGlUM3BjUWRhaC9VTS8zWUJlUVFMN1lHUzEKRmJ5NUtmK2xGdm5GR09MMnA2L1pqQWl4U2llcFowalhIT3EreEordTZmVjFRWE5qQWdNQkFBR2pnZ2RHTUlJSApRakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvCkJBSXdBRENDQndzR0ExVWRFUVNDQndJd2dnYitnaWQwWkdKaGJtc3VZWFZ6ZEhKaGJHbGhaV0Z6ZEM1amJHOTEKWkdGd2NDNWhlblZ5WlM1amIyMkNMSFJrWW1GdWF5NWhkWE4wY21Gc2FXRnpiM1YwYUdWaGMzUXVZMnh2ZFdSaApjSEF1WVhwMWNtVXVZMjl0Z2lWMFpHSmhibXN1WW5KaGVtbHNjMjkxZEdndVkyeHZkV1JoY0hBdVlYcDFjbVV1ClkyOXRnaWQwWkdKaGJtc3VZMkZ1WVdSaFkyVnVkSEpoYkM1amJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQ0pIUmsKWW1GdWF5NWpZVzVoWkdGbFlYTjBMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUltZEdSaVlXNXJMbU5sYm5SeQpZV3hwYm1ScFlTNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNJM1JrWW1GdWF5NWpaVzUwY21Gc2RYTXVZMnh2CmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lkMFpHSmhibXN1WTJWdWRISmhiSFZ6WlhWaGNDNWpiRzkxWkdGd2NDNWgKZW5WeVpTNWpiMjJDS25Sa1ltRnVheTVqYUdsdVlXVmhjM1F1WTJ4dmRXUmhjSEF1WTJocGJtRmpiRzkxWkdGdwphUzVqYm9JcmRHUmlZVzVyTG1Ob2FXNWhibTl5ZEdndVkyeHZkV1JoY0hBdVkyaHBibUZqYkc5MVpHRndhUzVqCmJvSWlkR1JpWVc1ckxtVmhjM1JoYzJsaExtTnNiM1ZrWVhCd0xtRjZkWEpsTG1OdmJZSWdkR1JpWVc1ckxtVmgKYzNSMWN5NWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNJWFJrWW1GdWF5NWxZWE4wZFhNeUxtTnNiM1ZrWVhCdwpMbUY2ZFhKbExtTnZiWUlsZEdSaVlXNXJMbVZoYzNSMWN6SmxkV0Z3TG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52CmJZSWpkR1JpWVc1ckxtcGhjR0Z1WldGemRDNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNJM1JrWW1GdWF5NXEKWVhCaGJuZGxjM1F1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2laMFpHSmhibXN1YTI5eVpXRmpaVzUwY21GcwpMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUlrZEdSaVlXNXJMbXR2Y21WaGMyOTFkR2d1WTJ4dmRXUmhjSEF1CllYcDFjbVV1WTI5dGdpaDBaR0poYm1zdWJtOXlkR2hqWlc1MGNtRnNkWE11WTJ4dmRXUmhjSEF1WVhwMWNtVXUKWTI5dGdpVjBaR0poYm1zdWJtOXlkR2hsZFhKdmNHVXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaWgwWkdKaApibXN1YzI5MWRHaGpaVzUwY21Gc2RYTXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaWQwWkdKaGJtc3VjMjkxCmRHaGxZWE4wWVhOcFlTNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNKSFJrWW1GdWF5NXpiM1YwYUdsdVpHbGgKTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJaGRHUmlZVzVyTG5WcmMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMQpjbVV1WTI5dGdpQjBaR0poYm1zdWRXdDNaWE4wTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJbmRHUmlZVzVyCkxuZGxjM1JqWlc1MGNtRnNkWE11WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lSMFpHSmhibXN1ZDJWemRHVjEKY205d1pTNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNJM1JrWW1GdWF5NTNaWE4wYVc1a2FXRXVZMnh2ZFdSaApjSEF1WVhwMWNtVXVZMjl0Z2lCMFpHSmhibXN1ZDJWemRIVnpMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUloCmRHUmlZVzVyTG5kbGMzUjFjekl1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lwMFpHSmhibXN1WTJocGJtRmwKWVhOMExtTnNiM1ZrWVhCd0xtTm9hVzVoWTJ4dmRXUmhjR2t1WTI2Q0szUmtZbUZ1YXk1amFHbHVZVzV2Y25SbwpMbU5zYjNWa1lYQndMbU5vYVc1aFkyeHZkV1JoY0drdVkyNkNNSFJrWW1GdWF5NW5aWEp0WVc1NVkyVnVkSEpoCmJDNWpiRzkxWkdGd2NDNXRhV055YjNOdlpuUmhlblZ5WlM1a1pZSXlkR1JpWVc1ckxtZGxjbTFoYm5sdWIzSjAKYUdWaGMzUXVZMnh2ZFdSaGNIQXViV2xqY205emIyWjBZWHAxY21VdVpHV0NMM1JrWW1GdWF5NTFjMmR2ZG5acApjbWRwYm1saExtTnNiM1ZrWVhCd0xuVnpaMjkyWTJ4dmRXUmhjR2t1Ym1WMGdpdDBaR0poYm1zdWRYTm5iM1pwCmIzZGhMbU5zYjNWa1lYQndMblZ6WjI5MlkyeHZkV1JoY0drdWJtVjBnaTUwWkdKaGJtc3VkWE5uYjNaaGNtbDYKYjI1aExtTnNiM1ZrWVhCd0xuVnpaMjkyWTJ4dmRXUmhjR2t1Ym1WMGdpeDBaR0poYm1zdWRYTm5iM1owWlhoaApjeTVqYkc5MVpHRndjQzUxYzJkdmRtTnNiM1ZrWVhCcExtNWxkSUluZEdSaVlXNXJMbVp5WVc1alpXTmxiblJ5CllXd3VZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmwKWm1GMWJIU0NGbXQxWW1WeWJtVjBaWE11WkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWcwpkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSUlXYTNWaVpYSnVaWFJsY3k1cmRXSmxMWE41YzNSbGJZSWFhM1ZpClpYSnVaWFJsY3k1cmRXSmxMWE41YzNSbGJTNXpkbU9DS0d0MVltVnlibVYwWlhNdWEzVmlaUzF6ZVhOMFpXMHUKYzNaakxtTnNkWE4wWlhJdWJHOWpZV3lIQkFyLy93V0hCQXIvL3crSEJBb0FBQUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dJQkFIZEVCRWZKanZ1VlpVc1lhL2M2aHlaU1lHLzJCaDVCY0UxVDdWYVZ3bEVjbEErbHc0dFA2MWZSCnNIS1FnMW0zVjdlenM2TkRCV3h4VnFDSUYzMUtzRWtyUzZIV1Rod1FidDI2Tmt1TnF5UjZLZG9iM2tqQ3Z1LzAKZnA0SnFvd3VXWHh3Uy9xKzM4Uy95bEVUUUpBWjZiV2RrWHpFcnEydUdxN2RjaXV1ZUY5cTMvTktaS1VyWkljTQpUVk1FNXZMR3hhZnFjWDc3L2phbGVMUWExQWtuSFFsclErUU92NjJrOTVJQTIraEZjQkx4cGtuWTVsSjc1VWdxCmFIcTZoWi81cGdBV1JwbTdvV1BXNmoyaXJLUDl3eHdhaUVMNmVRZW5VaWh5U3F0S2VhK1hvNS9GcW01SjhzMWIKYk5mbFpWM1l2WDZmUnllNGdQNlpxbkQ2bi9zUXlQeEtRN2NndXhRUEZva3JQT2ZONXBzVnBrc2dUUTlyUnU5Sgo5TXozRzFWSUFBOWk2QW5KM1JvN0d0ZzcwdHRBMkw1SmlObzhUNkswaGM5MFlGeVBCbU02cGF5TXdpdTZQb3pxClBLTXBrejM5TFFGbmxJQ2tUa2ZmRm1PWG4zS0pXT1VGQ3dlZXMxWEdtY1ZYYXJCd0pJR2w3cm5hdUpMb00xYjEKUFdkSXpUUkMrV1gvZXNFOW0zMWZIOW9MYjM4cXVWQ3JINXZTekxPSU4ya3phZ21MZWNUdk9rK1IwY3hDVDc3YQprQ1pwZ1RMcWJyTjAwTkM2OUJjck92VWpBdWNEQVRZUFVOOUV6Q1JmRnl4b3BpZzIrWEM0Z3k4SFNOcEgwOWpZCkFpUEZGV0dFQ3IyZ0FnOUN6ck9WbWlMdnB4OFQwc2Z2WHRhcm1aVHNIV1grUFIzb21lL2MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
    "apiServerPrivateKey": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdmJmNEF6bGltYlcrMXRvZ0tmWC9jUXdrcS9JNVZMOTlaaXNjVTJEb1B6VGx3dTEvCjJYWVRXN3V1ZlN6M0FheW5mNEwxalhqbXQ0bEZyMUxMQk4vVlhnOEJ2N1kxSVp6VzFzcStucjhuYUdBUmxaeEgKT0tpZTV5bkgwMmpGUGROZ0FtcjBWYXJoaElDWm4rd1ZVd0lOSjZtRTRVZVZSUUppTEpDSFkvdW5URm9BeTdjdgpQMWU0L0dGaE5rcTBjQmRxOFdFdlhlVll6elhYdGFNZklLUG93Qi9WK2tiZk5VckZrRW5idHVTUldjUHV5ZnA0CnVDWjZDT05qSHhNREdvbGRiU2VQbWZkTkg0NTBUL1dOT0RUS082d3YwUDNiMDJVSFJIUU16T21mUWFHaXYzUTQKUjJkamYyNlA2L1RuODd0RWRoQURHYVZKUVdUNndySjVxd1J6YUdBK1dCcXFPbCtxTENTUEsrMDFsZkh6cWE5dwoySW5kLzFNb3loUnFkNEFXU3BYbFZQQzlGbFJOQTN4bEhROWk3akNKMTk3Mzl2RHlNNWJNbjVmd1BwcFNLNmFkCmVBZXBoUHNtK0ZiMVhmRjhRYW5LdFF5UWYwcHRuNC9nSlRxWDhrL01rK3ZxK3Q3YzFrQ0dmallOcFNSNVN1NFIKalp0bzg1ZWE1TjhJcUFZaW1SMmVXeU5aTy8rNUNqbWlNTkxTSEM5TUVGMVgyK1pFRGEyZzFDZEh2OXV6TVFMVApTekFFRlFOM082RmVETFFtT0cvNVdOSnRHeTNQM2ZwbUVwNHJxNEY0QlJGV1lTM1cxMkpQZWx4QjFxSDlRei9kCmdGNUJBdnRnWkxVVnZMa3AvNlVXK2NVWTR2YW5yOW1NQ0xGS0o2bG5TTmNjNnI3RW42N3A5WFZCYzJNQ0F3RUEKQVFLQ0FnRUFoTG1rcDlUSXQxSmYzWDJpVE5qTnlTKytwQkNFclZaK0N6RVQwdjBUM2N4TEJYRVVKWFdtbTJHVQo4L3UySHBURVpiK2Z2RWFkMmo4TjRsY2dzeHRJOFZHOFhudkJkZTk4bWE0alozbkJ2eEtlbXJWSFdrc1ZTQkdCCnU5UXJVVktFYzR5UnZURWNMbyt0YWlWRzBkaTRqVXZhSzZUaHQvS3Y3Zzk2dUtjQTVyaDhvQWhhNUl5aFhPZGYKbEJUMVlRbnhCa2VBVk1jenQxc3F1dWNReXN3QTlCQVJxZE5WS3JwUnR0MEUrbEd6b2tJaDEyb0VkSWh1amJOTwowQm1EN1ZlMlpidnNpY0ZxVWk1ZUR1WngwcVdUNmVWUFduMlBBYmhIT2t1Wi9PMWdQaEV2ZzVOeUgvb2pzSzRQCnYvcUpING1lbnA0YkhTRDJPK3JDUjkyR291OHRNTjRUYk9zU3RZc0trVHdrRFBXS3VrRXZIVWNVd2hFYzhyRTgKcnhja283NnBkTmtTT2tYdE1LdGwrMlVwRVVVcW91aDdoU2h1S2hsNW1tYjFHZmxjUzQ0K3hLNUZieDA4UkMwdApvV2F3c2tCUnJQWTBnNWtTV2ZjQmFpYlVwRUVUZ0xwTnZldE54RWpuRG5XYlV4SE81TUlnTThBVWp0aUNLWnRZCjc5UHUyRFhtMGIwMjFYUTg4T1N6Vk1lR093SWpKQVhwY0ZXTW44YjZKQUZldlZNeFlZeVZ5ditNVnhnc3ZUckIKTDB0S1FIZGpUb000ZjlIUmJwNnJIdis3N05uK0FwSUxkRVVheS9KUjIxSTEybzVPb0N4UnBxdG1pcVhXdERnSQpua0lCT0FKNjErbGRwTUdMVzI0bHRJcTVHZVNKMWZ1WnVqSDZqVWxrRit1MjV6YTRaS0VDZ2dFQkFNeCtFV3FjCkEwQVUySjJINWZXckEyTEZjQmVSeVRNY29uMDZaRERIU2l6WWZlZnVpU1lYT2ZCcVRtUnJQZlFpU3FVU1BwOG0KZFdnUTZrMkgyVjJaKzhUK1paVGNZbUZEQytNeUtwSmVZeFY3b1ZENzN5dDNydUoyUzhKRWhVZ1RUZ2lqVGFQSQpqRnk4Z0RmQ0ExdGE2dUhuVU5ZczJwbzFIMlFSRTFmQkE3Ym40UnFscUd5UGQwN0F1THBkbXBqZGpTV2VTUUY3CmlkNVFPM3V4L1pxdGJZUW90dmI3dSs2VlRKSUdXWVFPdDNYYjJDWCtsc29td1dHME9JK2lhVEVHenJWZG83a1EKaUhHNUpsY3VhVm1WNWJTR212VW9XSVh4TXMwcGs3eGxWN1krOGVaTW9SaUhZRDRaMHVpeFRyUmJ1WGUwamlodwpwQ1hydFFRcDBlZHd0VkVDZ2dFQkFPMkJSQTRaN1JrZDcvYWFVaTR4M2lxbGtoalJTa0hXMnRQTlEyOGg5U29ICk0yV29IY3ZZaEYrYTNYVFJFZlJhT2xKOEZZL0hUcmNibk5pdlR3dGxBMlZIeVVlWWdiejJGY21veG1WVzZpWFMKcXFlZzBwTjkwMmgzYmdXcGkwb3Z6bkMrcnZOZldFbWl1M0JjT0Z2dDlkTkFWRlZCT3V5eHJRSHZ5aS9TTGhMZwpiSGRPbWxHd3RXay9ndTlHRjJaUTFONzAzMmJTUktxUmJZeDlBM3hwaEc2Z2daT1pOY3NMdGp6dVZCbVZKcWYrCmNNSHJhM0pPRUpYVThDQXVBaU5mL1RXZTZrWEhubjRCZHBKOENPNGVHdTdUcmVpWkZOQnFKL01pc25oN2ltZjEKZHY1emJxWmV1bm16RFJ1U0RhQSsrem42N1BWTTlwR0RsbEZEbDd1Z0FITUNnZ0VBQkMvNHIxUXVoTnRvYkNGaQpSaHVRWUM5bTBqUzhCLzNvSGVSYU5OMS8yVmM5ak1oSHFxNERFN2M1ajdqYWRldFYxL2Q5ck1pZTB0aTEwNHlhCm1ONFVWNzVWMml5Qkh6aStQNUxCYUduaVlZZzhqMm40OGV6cmVkdXVSWFlkdkpJWW9QaW5HRmw4OWxFdDF2WjAKRnlUUGRuekVIUDZpSTFJL0tFOXBNL3pSMUtiKzV3ckpYaCs1ODdUaWszNWpNZ29uWDhQVC91SEd1dlN0b3lUTAo2cVR1Znl4T1F0UjR6clBqODRHSng3aDliVDVwT0szejdJUEtwZk9JelBnb2EwYVdhUVJYMit4SXZ2dHBtNU5wCnVObm04RUZwWHVmS21FT09KTUZiTXhwb0oyVTJrdDZ5MWN1LzNzV3NtZk0zaDEzeGVGQU1NU3ZOVUxGNDdYTGwKeDNWNVlRS0NBUUVBN1RSRGNnbjJ3VFVqS3BvcUpiVHNmSTlzZ0pqV256Y2t5cENoSHVjOVlrSmExTmE1RzVRZApjUmJNd3hUajU3WU50Yi8wRU9zdjlMVUJTM0NiYzNmcGtrZkdBVm1SaWRZRklLa05yTHpIa2dyN0lmdi9GQXVCCkR6N29oWU0xZUZ5U3hBdk4wNGVRTjhydGhXUzFiU3NXYjJ3NlRnT2VCRFBYNUsxR3M4Z285L1ZvbnlmRC9INk8KVUpWOEFkbHhHV0QxbWMvYkoyZ3Q2R1Rpa29OdzdkcTh4M2hLc2MwODZwUEI2TXptOWIzL0k1MTlwRStwdWptNQpXc3VYSDZ5VHVoenVXWlZqeVZsN004SG1XSnJFbUgwOHpQWmhKSU52UkZBaG9qVXZKaUhNczlOMml0OWl6WXFpCmwxVjZhK1RNOHhTeitNNWh4d1NjNWV3VVB3bFJDN1RiZlFLQ0FRQjdpLzJvejZvTVNqMGFsaGdFb2Z0cXBSM1AKS0RwdnJxR1NXcVkzSUNmdFg4d0JWcnFKZW12SG9WQ3dZZ3hNWnNFalJHdlhNUjJUTlBSL0UzNVZtaUhST2JGQQo1ME5BYkk2NXIraHlsTC9FZDNFK3dCTlE0MXIwR3VnNXA2VFJ1UytmNVBWdFViSzVHSW9yZytLTkhyek5iUjl6CkZmZWdkWVhnVTNEc0p5RzRuT2c5b29lM2xpT3l0OU5HejJqSG9XVjRhYXl5aUJ5VDg5b0hQYVdtM0drb3ZxVWMKTjFxK1JpWU1CdHRyWTRJSVJIMGtQa3M4MGFHMUdFeVl4VElmZytJaEgzTktjeS9LdVlqT3FVRE5qMjZEVnZ3bQpkQTFuTUlsbjJGS2xuSlZTSkE1bEZuZStjeTJRdGxMcnBUWDRRYlRodGNDZnBBUGpocENHY1l2ak1YOEkKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
    "apiVersionDefault": "2016-03-30",
    "apiVersionLinkDefault": "2015-01-01",
    "apiVersionStorage": "2015-06-15",
    "apiVersionStorageManagedDisks": "2016-04-30-preview",
    "caCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV4ekNDQXErZ0F3SUJBZ0lRZVVISS9SbjJSb1RxRWIwamFucER4ekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1qRXlNelUzTWpCYUZ3MHlNREEwTWpBeU16VTNNakJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF5K1JVCk1MZlZuQkk1c0cxdVMrSzdDTXRJcnY1QkJzVmJiTmlySUQrb0ZkTnc1NTFxWU5Wd2RyZzlQNVc1WEY0SHBibHUKUEk1dWVkT0ZxdURGMTdBN3BwUTBEOS9idzJQMUhWaWpnTDhoVU9LU1B2cVdkZHpGQ2lhWVMwQVJnTTlna2xraApmd013ZE1DY3JYYmo5QzVSd2MzdC9sTzV1Y3AvMnByNjVzdWdMcXVYTkZUM1ZRZEhnU3dtTEZrakFnaUhwRjlUCjJScjA1NlV1SFNrcnp2NjVDbTM1RERsQitFTFpLdG1VMW5zaEZvV1B5eWZoRDhaSUJyZERLd2ZXemh1QXYyaFgKY3VXUEZtMnFuQ3FDb2VqbzJ4ZmdrZzF3NVdmTGhzemFHUXJPN3VqeWxtT1Y0QjBmRWdxNms5WDU2T3EwL21hTQp0WlpUa0w1eFA0YU9YQzVZUDcwaDVHZVFIam9RUUczU1ZNNnMyOU5HbStJcnpZdS9DMTFlQnlZdEVCQ29hNTdNCkZscUZmQy9TY3U4UUYvRzkrWkY1Z3ZSR0xOV21OQVRkNFZWMjR2MnlEN24zVUhXOXhYem5yT2hmSktKRHgzQ04KVTQ5Tkx3SWoyS1IxeXF1R3BqcXpLY2VKU0JYc05qMzF1N1ZXdE84TXNLaDl5VmNwVkIwNkZvVnFpZlR5cko2ZwpJUlhWR0FvNFJ6RjV5YXBlb0dUZ1o4Ui9pYmtCc1I0ZlE5NDc1UU84OTNUVmtFRXFyRTFiNlZqemhaOFFUWnJmClpRM1l4WmdCdVFmQWRDMTYxT2M5NEh4cjA1TytvWnZjMUFjd2Vma0psZ1NwUDRIT01HZ0VkamFiZGhGcmJnZkgKaGkxc2pQVFFUV3Bsa0pHckZCNEF3R2FmeEJubWtkYURyaFNTU3hzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFILwpCQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFFYWZ0aVFlCjZQOFdYN0NjcEFFMVVsSHBkelIvRnZ6RU91Yy9IaVV3eFpQeE5OcDB1UlBwM1JDdDFVbUE2Rnh1OGtCLzdGMzcKdkgxaTNCR0FWR1RNZWhodDZTRzNuZm5oYTdDNnQ3VEF6WEJFclpHNmxqb3BCQlJMMTlHVHpaZTA4NmlOR2ltWgozS1pXVkJsQ2dPUmJXUHFZQmZWL1hhUDNvWnB3aTFEZ2F3QVpWcTEydnlXdDJWYTBsOVdjWFlWLzN4aDZ3V2p5CndQU004RTlQWUhUUGFNMHRzdmtvanR2UmNsbUNBd3FYYURkcFZpK0d3YTJ2ZFNBMXhsaEE4TUpjTFBXV0FQR3oKeVRaMEVnaUU0Y0o0VXJ3STFWY1hpNWxHMVp3OGlPTmZDaTlWQjhvV3NhMWRKL29ERkRTVnhKY2QxaEx3K2RzNAo3NTZzV1ZUbjFQaW9FQmdSa2VuL244Smlobi94YzllYnRTcUg4cUVacUR3bEgyV1duUitvMHFJaXZlME1Kd0Q4CjV5bnE5dkQzTFhQbEdwemhDblFydXpsNlFqWHZKejcxeWNuM2VGL2ozSDlWbmNVKzBVZ2QzSGc4R3p3WGtYa0QKUUc0OFNXQUd0dzlHV3FpMDNLSU8vSktvQVhTNnpMVk9wZGpSMmEyMFZTSmRaZWdHaCt5UHhJZWNURXc4N3F2MgpwL0hjZmlFL1BFZ014M2ord0NXUXJCWTJFcExZRXJaTWtJL3k5M3VkQUs0aGt6bEM4dE1icll6M29wUFJoRTkzCk9oYkpyVzJodjdWWVZXcmxJZTM2Qzd5RG5YNWNtZ0xmTnQxOHc0SUNER2hGY1dod2tKelFkUUNmUzYvZTR3ODAKbzRIcXE2VmFLNTB6eSs3OXQzM2R5OEV3Mms2VldibUhrSjNaCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
    "caPrivateKey": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeStSVU1MZlZuQkk1c0cxdVMrSzdDTXRJcnY1QkJzVmJiTmlySUQrb0ZkTnc1NTFxCllOVndkcmc5UDVXNVhGNEhwYmx1UEk1dWVkT0ZxdURGMTdBN3BwUTBEOS9idzJQMUhWaWpnTDhoVU9LU1B2cVcKZGR6RkNpYVlTMEFSZ005Z2tsa2hmd013ZE1DY3JYYmo5QzVSd2MzdC9sTzV1Y3AvMnByNjVzdWdMcXVYTkZUMwpWUWRIZ1N3bUxGa2pBZ2lIcEY5VDJScjA1NlV1SFNrcnp2NjVDbTM1RERsQitFTFpLdG1VMW5zaEZvV1B5eWZoCkQ4WklCcmRES3dmV3podUF2MmhYY3VXUEZtMnFuQ3FDb2VqbzJ4ZmdrZzF3NVdmTGhzemFHUXJPN3VqeWxtT1YKNEIwZkVncTZrOVg1Nk9xMC9tYU10WlpUa0w1eFA0YU9YQzVZUDcwaDVHZVFIam9RUUczU1ZNNnMyOU5HbStJcgp6WXUvQzExZUJ5WXRFQkNvYTU3TUZscUZmQy9TY3U4UUYvRzkrWkY1Z3ZSR0xOV21OQVRkNFZWMjR2MnlEN24zClVIVzl4WHpuck9oZkpLSkR4M0NOVTQ5Tkx3SWoyS1IxeXF1R3BqcXpLY2VKU0JYc05qMzF1N1ZXdE84TXNLaDkKeVZjcFZCMDZGb1ZxaWZUeXJKNmdJUlhWR0FvNFJ6RjV5YXBlb0dUZ1o4Ui9pYmtCc1I0ZlE5NDc1UU84OTNUVgprRUVxckUxYjZWanpoWjhRVFpyZlpRM1l4WmdCdVFmQWRDMTYxT2M5NEh4cjA1TytvWnZjMUFjd2Vma0psZ1NwClA0SE9NR2dFZGphYmRoRnJiZ2ZIaGkxc2pQVFFUV3Bsa0pHckZCNEF3R2FmeEJubWtkYURyaFNTU3hzQ0F3RUEKQVFLQ0FnQXV2Q0dJSVRzM1VQNGtNSkV0bDhUaldTVko1MEdrZWF4aElMRG83VzVyd2xHSTVZNHlyL25kWEpHOQpkMlpMZzhvZzlJWU9IMSszVVFLOGpsVUxBWHhLeklHNmVjZDMyL3VkUkdvRjRzbVNMcnp5N3FGNlZxWmJrMGtwClJvQThsRXhBZjJtc0lXRUVBZnBuMEc2ajA5SXRxRFE3TFpuT3VsbmdFOUliQU9Xd2pPaFZ1SHdRNDJCQ2ZZb3EKZEN3UUZVQnlMdCtiVGhDQTRGM1hsVTVUWGhPd0RsRWR1aW9pNjcrM2tMUUxEYUloOVc5bVU3ZkUwK0JDbWRNdAprOWhxMmVjQytMbkN2bGV6L21NeTlKT0k1VWdxb0NoN2tkVWs0RXZJbEVBUnFXYVJZSmZxWE4xSHg2VU5qNlFBCnF2VmpyQmpjajBrRmZuV2RJZW4zYzdKQjh1V0xIZHBSSGNQQ2hPVE1mbkM4MGM5TkJFRnhKdWNjbmdnR09wWUMKcElSdFlWVFl2Vzc3cW9PWTczVGlJTVJXMnlSc3RqbmR1QmozeFdQd3d2MXhkYTIxelRGYURURzNlWUNiQU1sMQptQXRrN1ZCUVlzQnUxUTdUY1lEK3ZZZjUvNEUrakJBZC9udGFjUlVUbkNUcUsya0dZTG9JNUl5bjNZbmU5aktSCnFmY2R5Q0MrRzcrVkVvY2NURndxd1Vwb0JtTXpjczhCTlBjaC9XNWR3T2xtUXZ0cGtpdkhYREdFSXBoYVQvbFcKeWR6RVdxV29wdHRjdHlJWFNkUmdNSUpVSkxuaGQ3RVZuV3cxVXZaQW0vVDVRS09SZG1QcjVQNXM5V0xRYk9uNgpkNytDMXNlcldnNFVybGp4QWxPbWRzbDVWRHZaWlNYR3hPaEozbWpnWVlsUlk3Rk5jUUtDQVFFQTNqcXlnT2N6Ckk0WHBlbFJMSVRxc2szVDZxU0RmTUZOdHpiOFB2dHpkMXkvczFQZEtQSE5pNE9tVzJBS2pPU0lYaTNBTlBhSDkKNFEyeWExZkh6a1Q3ZUo0L1c0L2h1UG42d25lV2o5SzEzV2k2Z1lIMWRjclFGaEdPQ3V6SmN3MWR0bTlpSTlzRQp6Vlp0dFczM3UwdSs5SmJEekszL2xSUTBKSEt0MzZiMGtoWFhnaEt3L04wNnlWdEVMT3JQQ3ltSWR4Zno3dDBVCnJ5aUxBVm1sbk5CSkV1d0VTejE4MXlXWjkySnBNZEdROG5FRWh5US9kMWZ5ZmhqZ1lVN2tPL05wZGZXaXVTdUoKS1hKcmU3eCtzaFkvUnhSa3BSNEFScnVWeTlDUHk2Q3MraVdZcDlPYnI0MXYxY0llZS9ZYWlhUHRJdnVQWkczegpZcmNVOWg0TFlUOG5iUUtDQVFFQTZ1QkNiaGVWQkRjVm9GZVNBR2Nnb3BXbk56S2N2ZnA5Q1B6WVdEcnVEOW5lCnd5Zlc5dXZtbTd5Tzl5U0FzWGF6VVh6Vk56RW5oT2pXamJvOVZLRWdqMW5WZ1l4RDZHeVpIUCs5K2VxV29ta0wKL3MrZ1pvSmxkZVdqV0FQSDczSXhhNEpKcURtVWJiWEdtcFhubjFPaFVjOHBjdWtzVXVnNmhZUmVoQUlZd1pyNgp1eTZBZEtZNGVDd3oxWnNmMDgrcUMwSGtJNzl5SWJ3T08zWWRwdy83MHdFZUc2T1hKUFZwY29JZ3N2TTVTMGVyClMrWndvWWhRMWdWeEg3ekY2ZHdkRHQvSm9kR0IwSmJMQ0RUM25CNC8xNm9hTnd3bXFPMWFvKzdLSWlUVm1ET1EKQlJpbE1XVWJPYUVScmpCNUdwVlIrZ3ZGWEptRWh3TldIZU4wbWtML3B3S0NBUUVBM2FTRmJITXJXZjZ4Z3NTWAp1aWllL3VMcExjNFBURStwY0U5akVPV1FqSkxNRHd3bENtMjY3TCtOSnh4YVZ4MWRoa0RYcytUaEpabFhuaUFLCnMvdXhJL2dSRU8xTUlBV1N5R29seklSSHh2QXhOQUcrSXlHSXNMb0poWFBzNThjbzlFL2EvZy92bGl6aGR0YWIKQWo3bDBXU2RISU5lS2YzZ2s0bWRTVGRuTGx5Q2VNVFRxUit0Qmk3MHJDZjFJQmpvZG45NVYzOUFwZ0kxd2I3NwpvbzlLa29pN0w1Ky81NFVsTHNzRVNCL1FCVDRiV2Y0WkhwcWt6SWRiSXpKZ0NEc1pzQUN4cnlWd3c5bk93YmFhClZseEIrRTZxb3RSdFNoN0ZwR1g3UlFpWC9WV0tEN2pKeWlteXBPdmJJNSt0a0NIaTNjVXdtdVhlblZJa29lUU4KVFl5RGNRS0NBUUJreDBTNXFEU3dVbEpkTWpYYkptVENYaVFaY3dYK0hmUjRYc1VWVm5PL0tXU0RxQng4Wmt2VQpsdHRnLzdDWWRLNE1VTnZMaXJQQ080V1QyazFtZXB4VjVkM09jRGpUQ1lYSkE1S29JUmZ4SjlHVnk5Q3ZLMVFOCmVqTFVHUXM0bW03S0NtVkFZVFJtdnBBdzFCRkdNOFFNTGk5Q3R2bmx1TzhqU3VDakU2TTdyeHZXSk9YSkoya2oKWnhQMm0xRFV1VTNrOXFqRkRlZ1N3WFg1M1h4cnFsZ0srWGZKdEMrdUUvN2l1eUw4cFkvMzFSQ1N5SldiT2JvMQptckFuUmdCRmo4U0lGVTJXdVNaU01lRjc2LzR5Wm1oT1NSWm1lRGcrVTFtSTdYU2RvZUJrSmZ1dHRCMXRURXlhCk5abzRlMlA3SEFiSW16UmJ2eU0yS3lCUVFzQk5VR0lSQW9JQkFENnZPME1JL2ZUcjVDYllMZDlqeFl0UDdxMHYKMDlJQ2d4aktZcGpLN211SWFpWEJodDFVVURtM3BQdkpTNXhTV2s1ZHFkRUZmUUEwakdkK0pDN1d1bEs5S0U3VApiNmhCd2o5WTJLTVZYVVAyaThTbjFiNVpQeGdTb3BiU3pNRGtqVUx0VGQvR2dxQVJMeE9ZSndSa29pM010K243CmduSlFQWGtMZ1Y2bXN0Z0ladVpPZGZmOE9MQ1lqUDNsa21QMXF0WkpjV3RPbXYyeElVT2x6d3lYZ1RhZ052V2EKZnhIdjRjMkh1ejRzSHBEOEFLNFY4QUdqcFVqdG9lYlBvRitmWTNHbFZLcTRlMGh0YXVOSVFIL3NHWmZoZklPNwp2ZzM1aXBEUlhmRm9zZHNBNTVsUkZxNVBQdGlOV3NmRWFYQ1hMQWg1N1hVemU3R1hEZytVZWJ0NW0rOD0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
    "clientCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5ekNDQXQrZ0F3SUJBZ0lSQUxreVQ0V21KVTJJT0d0dHBKSVRuRzh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESXhNak0xTnpJMFdoY05NakF3TkRJd01qTTFOekkwV2pBcQpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVBNQTBHQTFVRUF4TUdZMnhwWlc1ME1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXd2VzM2bnk4VWdCTkR3Nko3TTRHYzFHdHFmM1YKQkZkMjZnd1hBNk0xR1ZJemNsZU83MmplcHJ3dVhVMDd2VUI2WmlpdXpmNjR2blFHbUo5YjBGMHBFSXBiUFZFZApybTZycHpEeTlkbFZ6QS9SVkxIVmRFTGNURTF0SGU4NWxvTFppMm1zM2hRcmtCbEtiOElzUjFFVmdoOWRrU1NnClJ6WGUyVkxKZFpGWStEMmIvcXQ1WWRyRkYzOFE1RitQbUNSR2dJTUpTcEIySjNIYWJaQ2R0azF3VldTT2VsQ0gKODJDUmg0QTV5MFIrc1ZodEFwY2p4K0llMkpZMW5WalRTRzM2d2RyS2hMU2dIT0tNWTFyY3VDRHhGS29OVTQyQwpMOHRYdmZTeFUzanNIOWMvWXFJT1NRcmVyL28xdnZoMjVvOWNYOTVTdy9XNERqeDRKS3M4czBQVERxcy93YzZECk1uT3BRa0Z3VXA3QjI2YUJJc3JBOGUyYWJXYnR3TFZzb3hDemJJY3hQMng1dS95VVRlTHZqN2hKejB5aG4rM2UKZ0FoRXVjaVNkVS9PVFVJQmJlZkRkSDRKQ0wyaVg1NngyaklzQ0JpYU15UzVMdW1KVjNZREpiOW1DWTdFWSsxVwo0czQ3emZCWXFvbEJ4Y21vdjhyd3hSUXlIWXZ4dUJES3cvaFMxZnE4bmdaM0tPaEMzZTNaM2FmamJRdmNJZ3RUCmdtTzRCTHVITnRCQ3RQQmt0bUd5VGZTMVphK2pQb2hBVVVyNmFVRVFFd1NablovZCtJRU5XUU9uaHdMYTA1NU4KUzFZTWVIVjErcXRYKzdlTDBEMFN2dzFKakswTlJ1YWdzRGs3Y0RibzBheUlQcFArUXVBNERoT2lJOU1TRjhqQQo3UGJreFhieTZURnh4RDhDQXdFQUFhTTFNRE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUNnWU5oQ1QKT0Juc2NMeFdNandnbW50cEpmYTRkN0xMMEplRi94eTRqckJaUjQwOGJqRmlEL3ZrK1k3RGxpUnBIckZ6d3pDQwo3SU9hUDhMTjBSUXprL3JoVHEvckN1eW5SRUJPNGxLZmgvcTdNWVgrOEJ6SHhKeUNicFhGUnpuY1lobWtleldKCkpBcVlzWDE0ajcydFRDRm1xcEVCQ1dlMW5pZk5hb1lneWZNek5jU2s2NyttYU5pbXJVN2drSVZOdTdmb1lIQTIKKzRTTi9wY3JEOFVqUlF2Y0dlZ3hqMXU0RXcvVnN3UzE1b2REa0RnVkl2RFRrNTlCTGVDSFRHdWhPTU5PeUx5MQowYXRBU1Z4NEFPenRaTDlHMm1UUjJRZmt6WVJPc0NpblVNZVh3OE5qbWtqNk5yT2hsUTZXanZKY1JJYlNZbUVZCjQ2bkYvVG5UQUFIamNldUlyOFNKMjF3YUJHaERYRWtjdGhhSFpuNFFPRTg2c1BWTUNmY1NjUklRVURUbXZXOEwKRlU2VElmVEthQkM4eHlWa3JtUVhTTmxvRDgvRkpnRml4N3o2a3R6K2g2NTN1RGtmb2t1cWtna2Y0N01OYW9LMgpPSGJncnZhbW9oc3Q3Q2VVb204VkkzZ2VFc3QzaE50ZCtPQUtkdzJCcmdlcFJkSGF4ZU51YmFsWEZUQ2FiUXBxCk14elVjSTkyZFdXZUhPRFhpM1B1OWoxU015ZTFqTGNoUWxOM2I1QUpLazVGOGtualdaWUd6aFRUU01sdUk2SDgKeVVvd1dBY1hYcmJDNlZYYUR2MHowazV1YjBHTzN0SmdSdllBZkhIVDdlWXdlRUZyK25wZUMvNmZYSllRaTNJTApaTEFCN3lXbU1nZFdWdnRuYWkySmxScmEybHFTU2JJZ3BHNkQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
    "clientPrivateKey": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBd3ZXMzZueThVZ0JORHc2SjdNNEdjMUd0cWYzVkJGZDI2Z3dYQTZNMUdWSXpjbGVPCjcyamVwcnd1WFUwN3ZVQjZaaWl1emY2NHZuUUdtSjliMEYwcEVJcGJQVkVkcm02cnB6RHk5ZGxWekEvUlZMSFYKZEVMY1RFMXRIZTg1bG9MWmkybXMzaFFya0JsS2I4SXNSMUVWZ2g5ZGtTU2dSelhlMlZMSmRaRlkrRDJiL3F0NQpZZHJGRjM4UTVGK1BtQ1JHZ0lNSlNwQjJKM0hhYlpDZHRrMXdWV1NPZWxDSDgyQ1JoNEE1eTBSK3NWaHRBcGNqCngrSWUySlkxblZqVFNHMzZ3ZHJLaExTZ0hPS01ZMXJjdUNEeEZLb05VNDJDTDh0WHZmU3hVM2pzSDljL1lxSU8KU1FyZXIvbzF2dmgyNW85Y1g5NVN3L1c0RGp4NEpLczhzMFBURHFzL3djNkRNbk9wUWtGd1VwN0IyNmFCSXNyQQo4ZTJhYldidHdMVnNveEN6YkljeFAyeDV1L3lVVGVMdmo3aEp6MHlobiszZWdBaEV1Y2lTZFUvT1RVSUJiZWZECmRINEpDTDJpWDU2eDJqSXNDQmlhTXlTNUx1bUpWM1lESmI5bUNZN0VZKzFXNHM0N3pmQllxb2xCeGNtb3Y4cncKeFJReUhZdnh1QkRLdy9oUzFmcThuZ1ozS09oQzNlM1ozYWZqYlF2Y0lndFRnbU80Qkx1SE50QkN0UEJrdG1HeQpUZlMxWmEralBvaEFVVXI2YVVFUUV3U1puWi9kK0lFTldRT25od0xhMDU1TlMxWU1lSFYxK3F0WCs3ZUwwRDBTCnZ3MUpqSzBOUnVhZ3NEazdjRGJvMGF5SVBwUCtRdUE0RGhPaUk5TVNGOGpBN1Bia3hYYnk2VEZ4eEQ4Q0F3RUEKQVFLQ0FnQTdLREFzV0xrVDhMOXhLQ28xenJZcVc4aGtZbjgybUF1ZkxSZjJwSmxDRzYwOHJ0RFNXSEhuQ2diUApqTlhwc1J6eXpybHNERFNtcGJJeXNYZzhtMmdRZXNzQXFoSmxrWE5JZ2hQWEFhR0ZEKyttMFdkQnBlQU96eGVqCkU2blh2OUNlK3V2WFh5dHd5QnZNR1pFeCtxcWFGMFplK2t3Z0QzcVZXd2VDUXg1S0JQZkdxT1ZtQ2Vud0hVQlUKNjZJNHVoa2llYUJpSGIrY2JIR28rVTdCdUhHemw1V2NDNytVMitLTXlSM0FUZ0piY2NkeUY4WmxxbmxOb3hhVgpyaFErVUJEY3JiVHgyNVVSN3JSR21aV0wwWU1Wa0J3SEZGTkNpV01RWXFWRC9OYzVPaWtqbHFUYkNROVZPb2tBCmI0ZzBvWitYLzNBQndoZWRTai95Y0hzMHNnbmlTdzJVRjJIR3NMYTEwT2o4ek9QMTBoZmxlU3BoRXdsNW5JN3cKa0RZMUxpWjdlOFZHelJEeUo5ZEc2WXB4TmhJYTR5QUVyR1hmblNTK1JQSG1hUVJSSitrd092Z0RYSitSL3pMbQordlhqTnZWNWMwNVFoNFJJTjhJVmNrR0hZNWF2aHlTWVhuTmtkTXlvcWpvcE8vbU5ETTNXbmxEaEt4TDBzYUZ0CkdOaUZCWHVPcEdOdk4zcGVTT0hmVzR4aThCalhtSFFCSmNKMisvdUxFTEdTeEJsUmFYWDkxUk85L2pOYW96cnoKcU53RmI5bzNtNjFPQlRIOTJRb25lbjNHanhUWVJLeW5PSWZqN3Jpd09ZU01ycWhWWWJ1NWlnaVRYT2l0M2ZnKwpGeDZ3VDdLVTlUckV1cG9ROFRnYXJ5OG1iRUl4YUJaMklESnhXcFZUSDBMQTJEQ3B3UUtDQVFFQXhrK0MwbkY1CnBCak5rWXk0ZGczb2Q3bE1ZaGtaWllCSWRCdU90TjAxY2pjSlhsSURzTTFXNWdQNy9PV3lPWWJ5VnNoSHhQTjQKaXUxakVrbU52Y2hpckVzQkt5TWs2NHFQSjhRNjJQU3k2amlFbkFnQnNmVEhhYUxqejB5SjQ2U2hTRE83NUVvQwpoam40NEQ5QjlpWVUyTVdZRmZOQjlmdTZYTEMrZCtRUkJJUU5yQ2gzSk1Jb3Z2QmJoUUF1ZGZaNzJBTVloZWRiCnJKSEVTaTZOcVBMZVNqTHF4djg2b2hHZEt0YnlNdkgvamRNeVdLVzFRWHExSDV5YzhtZ05TOUtlM1pqeEwxZmkKRVdoR1hLUzUrQnFzaEM5U1NpK09scys0bXhIejY0bzRKdjdsbGlVbWVWcTE5cGQzRHJVOWdWeCtibXQyQktEZgozR2J4SkhnSDk1d1RjUUtDQVFFQSs2eXIrK3FjbGdjcTB4TVZPdVZtZWR5ZTZTOXpib0MyQi9PNm1ZTUdyYzgrCndCL1pyMTZtVWY2Yi9MclFJRUR1d3VKdmdiekRIbThjUy9MUTB2K2h4U0k1ZjY0MXR0eTUwRTBpdHVYSGtjaTMKblI0MHhaV0Yyc0d5RlM0YXBaVlhHdEhhZkV1ODdiTHM1Sm96WVUzSCt0QnJQUjZ1UHBNVUtRV0VNRVZ5NVBoYwpvbnlGZlQrZnpRczlRdUNOYjA4RCt5SUNOazdEdlRnSGZPWDkzVmNoais1bVFGVjQ1UDRrd3dpQ0pYajZWSXh1Cmt0OTkvWjRCcXdWSXBwbUtyd0laeXAzdU5jL3hsdDVZYm1PL3k5MjJEdDBvYTlHSTZOZXFVNDZzREF0N2hDNGQKYWFUZ1RENjJiWEtXNUdsSGJROWdUNTRVeTAwZElXaWVLMUlmRHJjYXJ3S0NBUUJDbm5OVVBzcWVWYmE1TG96SgpHK0w4VlVOVHNSclcva0ZZditrdzJSOGJQMkhtVGFidnZndHpPZU50RWJ6TmxvZlNuM1Y4dEUzS1hmVHFMOHR0CjllTXYvZ0ptZTJmcnVLQmV1NDBKVlNyRmhEY0lNNmhlSDl6ZG45cm55TTZKcXNTRGZOMmgwenNGM0hPKzRZRkgKTDRQUlRvL0l6KzlZc3pmbjYzZ1F6b3pvOTNPZ1lmZWtZWlZPajNBdlBlQmR3Ry9hSVRBYnk1MEFXL2VVOUE2aQpzdlA1K1NEbHVOZjVtZkV5Y3dMcUdtRy9Rek9tbEFSUCt1amR0YjhEci9ESGgvbldkNHFPWFBlVTRYTEJySlRNCnhDa3dQclZtTnBPd0ZoZnVBQm54Qm4zV204cUVwZlpHempKU3BJOWFZWWhIN01xTVRZMVlBTE16VjJHcTNxZk8KaHFBQkFvSUJBUUQ2dTlDc0xkVEs4MkVLNE53cHpSb0hGbkdMUjZiczFIYUYvYUJPQ0dmRENkSXVmb3pWVnFyRQp6YkNDWFd1MGRueG8xRWJiTGtBR05oUXU1ajU5dUFobTZlMzI4b3k1SGJaUmZFZTFoNzhIMHJ4N1gvaWJVSmdHCmxTcmlSd2h0SnhlY3RLM0RYNEZlSHdBNzBCU1lRSEdYdzhUVEk1bmM1Wk1VTzFheThMM0N1RjB4MUhUNWowV1oKZGpVV1I3a2d4OHZqaXNKQmNMODU2SFF0VHNWWW10SHBIMDNua2ovYmhBY0Q5NW9SMHpFeXdxWDIxWW9qL2lNVApTelJTSm00d1pSdGs3V3JCV2VZS3RJSE5tTHNnVkVacEVKU1F0alI4SlVDZjltZ1pwK2JxalRib1pVYkJMMGw0ClNNMWp5aTlLekNMYnIxWndKT2Q4dlVtM1J4MkIvNUlwQW9JQkFDK3VhL0VoRkJhQ1RvSTMyWXVoUDROWEFWWUcKL1M1UzdMK0ZCbmZKMkw2Mk0zMmE1aFZzb3hQZ2diM0E3WXNCMVExSE5XeUdFVmtsSGV4N2hseGJnUFBPb1JELworYWg4VzZyeVU1MHpjamkwQnNHOVM3REJLSGFTMXZscml1ZkhJOVdjeTdpZFNiOG9tNC9nQ0tTZ1BsVXNuN0FmCm5oRCtiQTJUaXJqY0RDY0F2b1hielBRS2dheW5WWmE4YlRFUXg5bmZwb2IySzZWTllPb1lGZzJPWnZZbnJkclcKbzBvVTI2VHo3M2E0ZEJrRWJ0UXBBdzZ0T0tyQk9zaXZ1bHVMbS9mSDZrYzZ4ZTgyOXpSd3Uwdk5aL0QvemVSaApTK1dBcU9kZVk5RVpPUXdkYUhkaWF5Qlk5clJJY2piVklkK2x1VW8rUkkyb2ovTk5sVEV2NWZTakpiOD0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
    "cloudProviderBackoff": "false",
    "cloudProviderBackoffDuration": "0",
    "cloudProviderBackoffExponent": "0",
    "cloudProviderBackoffJitter": "0",
    "cloudProviderBackoffRetries": "0",
    "cloudProviderRatelimit": "false",
    "cloudProviderRatelimitBucket": "0",
    "cloudProviderRatelimitQPS": "0",
    "cniPluginsURL": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.0.tgz",
    "containerRuntime": "[parameters('containerRuntime')]",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "dataStorageAccountPrefixSeed": 97,
    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
    "dockerEngineDownloadRepo": "[parameters('dockerEngineDownloadRepo')]",
    "dockerEngineVersion": "[parameters('dockerEngineVersion')]",
    "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
    "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
    "etcdClientCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQVBKSnFHeEt2UnRtNEZtMW5nR05SWFF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESXhNak0xTnpJMFdoY05NakF3TkRJd01qTTFOekkwV2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa1kyeHBaVzUwTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBeU1hb2cybGIxMThwWGF3TjBPV0dOVFB3bm5nbjhVMnAreHoreWhlU2ZWeVVxRVpWUFJkN2ZPOVkKWnYzc2kzaXFtL010ZHR4ZUhaM1kzRGhKOGczalUyeVd1OXp1enpNcXVMRzVjM1VjT01aME5XeXdHdHVsN1ByUAptVGx1dWc5N1lpajBVTlFtM0YrU3JjbmQ0bjZzdjIvdlpCTEJ1NGxSeUZsbXN5OXo5bHk0M2lZS2JjMUM3NU9xCmlocUFmQXNva2xQRU1xYVZnMkNrR0QyMWxUcDE3Q0ovVytMUDg1L0Q5Sjlaclpmb0hJRkc1QnpQanBhckRveDMKYURBV05wVit1QS91S1NFenAzTytjNFJIclQxRm1rVWFDd0xmNUViYVZIdlVOeVBnaUtZcmNmcHoyY2hZSXIwTwpSZzZwR1pPMmhLaEJyalhnZjVCUEJ1U0RXdjk0M0h4TERnSkN3YkpmdVArdnJCWW9qZUxONmFoY1NMTXMvVGU3CmpwMEczc21rMXhHZm82Q1ZMcW1rekJoOUZnTGluZGJmeEFoTndhVjdXNFlPSWtmWFlnOXVSN1hpQXFFeTRiMFkKZzI4WHNLQmVEa0tITTFPbDFidTBCUnd4bVBkM2lPNWphOEp0T3dsQVZuUU5sajdTQWRwRzRja21ZUVJWUnlveAo1NUhMaklrKzR5MUQyUHBPMVJCQUJrZ1pBOTJUbVo1MkFKSXdKOUhBeUlMalRqazZGcGRqemFFa1VOMmtEbXpZCnE0TUZyQWx4TGdSM21HSzg4ZWZxYUUzWTV5QWt1SWhmdGgvcFk0RUV4ZmZYYytmSGpkY2xscC9Fb0ZqNjZpbkUKQ1lrMlhpMm1ibHZtOW1NYUYxblVnZ3lSVld6OUMrZ3d0Wmwwa05iTCsyVUsyUTBuNWhrQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkFyLy93V0hCQXIvL3crSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUUvajUzSXZhSzB0enJ2aE1CdVZaRndXYy9SMEpTVGNHTzdBS1BhWApQME1JSGFodEdaNEl6aU1vVjlhWDN2TzJ1bGNmdEVNY1NQTzRwaEl6YUJ0Y21xSmh2THVMTDBsUm5uT1FHSVlnClFqV05oVlZFTG9VWGYydmtMc0ZBRzkzZDB6MW5pN3ZtSGgrNFV0dm1jOGtEUnZLam5ZazM4M3cxL2xuaEtwYkoKSGM5Q3V3SU1BTHlhanhwRjNPSmExTlRPT01LYUdSYU95U2FGWEFnODF2cnpRU0xJakhDcE1xSkcvTHhkY0N2SQpFRy9ocEZRNUlPVzE0ZG9JTFYrZkgybVRBeW9PMWlLa3lhQSt0SXRuQ0IxbXljei9pNE1EQ0pKTVd1MzlxQWVUCkJ2akFiUzY0Q1M4RCtiN3l6V2ZuZjJwTUZSQ1BTelZ4VlNmTUpsL2pic1ZEZjBuQWc3ZWdsZm1jN2ZoelBqTTgKRUNKZ0lZY2xiSTk4QVlmWnoyM1R2dWtXL1FvU2hFNmhHQVlTcUE2cnFERXZGZkRzZlVKeGFGZnBxZkRELzMvTQo1MEpncHhEaWorT1ZzWTFRY0JVTUxxSjV5aVBZV2pZcTFoYklpM2V0eklFYm1wZWVDK3hQeHppUG1nb0NOOTIyCmtFeTZDbk8rTm9IblNpQk9YT3J0QUVTNmxPWFJMa0Q3QXJrcnJXOXBaQUJPYks0LzM5bzJLTUcrM1FBOWpuYm0KcHVxbzBkWGNxc3RJUVVaNkR5dnpWdldTd1pGVWpweW45bHFMVjU3eHB5RTY2akcxWmVQUkFaZmd1ODl2Y2pYRwptT0p4aGFNNTg1NUdoUWpjbkNaQzZEeHhMT3Jnb1E4RFhPZ0Vib2hROHBFa3ZYNFJiQ1Z5VHZIRWl1am9yZzdFCk42NkUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
    "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
    "etcdClientPrivateKey": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeU1hb2cybGIxMThwWGF3TjBPV0dOVFB3bm5nbjhVMnAreHoreWhlU2ZWeVVxRVpWClBSZDdmTzlZWnYzc2kzaXFtL010ZHR4ZUhaM1kzRGhKOGczalUyeVd1OXp1enpNcXVMRzVjM1VjT01aME5XeXcKR3R1bDdQclBtVGx1dWc5N1lpajBVTlFtM0YrU3JjbmQ0bjZzdjIvdlpCTEJ1NGxSeUZsbXN5OXo5bHk0M2lZSwpiYzFDNzVPcWlocUFmQXNva2xQRU1xYVZnMkNrR0QyMWxUcDE3Q0ovVytMUDg1L0Q5Sjlaclpmb0hJRkc1QnpQCmpwYXJEb3gzYURBV05wVit1QS91S1NFenAzTytjNFJIclQxRm1rVWFDd0xmNUViYVZIdlVOeVBnaUtZcmNmcHoKMmNoWUlyME9SZzZwR1pPMmhLaEJyalhnZjVCUEJ1U0RXdjk0M0h4TERnSkN3YkpmdVArdnJCWW9qZUxONmFoYwpTTE1zL1RlN2pwMEczc21rMXhHZm82Q1ZMcW1rekJoOUZnTGluZGJmeEFoTndhVjdXNFlPSWtmWFlnOXVSN1hpCkFxRXk0YjBZZzI4WHNLQmVEa0tITTFPbDFidTBCUnd4bVBkM2lPNWphOEp0T3dsQVZuUU5sajdTQWRwRzRja20KWVFSVlJ5b3g1NUhMaklrKzR5MUQyUHBPMVJCQUJrZ1pBOTJUbVo1MkFKSXdKOUhBeUlMalRqazZGcGRqemFFawpVTjJrRG16WXE0TUZyQWx4TGdSM21HSzg4ZWZxYUUzWTV5QWt1SWhmdGgvcFk0RUV4ZmZYYytmSGpkY2xscC9FCm9GajY2aW5FQ1lrMlhpMm1ibHZtOW1NYUYxblVnZ3lSVld6OUMrZ3d0Wmwwa05iTCsyVUsyUTBuNWhrQ0F3RUEKQVFLQ0FnRUFvU3VmNElXMkhRaWVDenp2aGs2SjByR1VLWkhvOW5MU3plcnp1VVQ4Nmpka2VrU2piandvZkIwaQpTT0x6Zk81cmZtN1NnMFRaSkVzdTUzRWtJdlAxRldYcEJudVBGTE5OU3lBWDc5QUZ6S202Wlp5UExiQSszU0psCmZlbTFzaFIxaGxHNzlocW42MldwT0dzQS9DMlYvTU1kVjZjYTc3R0cvaDZPSzY4ZkZwaE9LcjQ4eHZIc0ZxZmkKVWFSK21aVFhoOGRJaXlSZ2h5c1A3d215ZDAyTGxmZ0hacnFIRmxtZEV3VE1GMmNIQThMZkpvVGVOT2RMLzR6UQoyY2tvTzc3OEQwTnllbi9WbUVsNGpBQ1hEVUZQVzB5M1lEbDVneVZCWkdwVzY4Q1lJUG5MakY1eG0xU1JNNm15CkNKa0NNNjc0NkRxdEp1ekcvMy9YZ0gvMTFobVlhWEJHRmppVDJybXpuZHN3MzlDRUVMM1hFZFRuTFhjNmw3VHAKWDNZZWhJcThYRVF1NVNHaHpOMTNwZlJpcXJobnlYeHdnZDc3d0JTeEZ5RXFTRzQ4RXd0T3FaMHFEdGZ6bTJGNgp1TU00bDFRUTY5UVJtbmdXSkwwK0VpQ1NDajlXdSsxNVhhUmN6bVJlUFNEK1NicGd1M0VQRkVEUm9QM0RRcXZxCkJWckJaQ1R0VlJjTmdQSGxnQWpXajVCdkE0ZHJjY0VjQ1MxTUpVTWZEdENiN3JXS1ZxM2JJbVM4cGtNWmp1ZzcKajZkOGdzS0huRS9MMmxXNzlDcXg1eEh6anhWMW5vT0tua2NXVjR5T2cwRm1idTlWa1NQSnZCMmgwRjVNMEJGMgp1TVRvdlIzTmJJWStrL3J5VnNMUVBjVGZHTEQ3RDArZU0zMDBiNExrS05iNytrYS9iVFVDZ2dFQkFNeGJ5b0VBClY5TGd3VU04SG9va05RMU9TdDdvdkx6UlVTcldwMnpiUFcxNHFrU3ovZTBYb2hVdGZmalp6M3MreS9hbHRObGoKTERZekdzRG1MOTJQL3ZTc3ZGc2NBTUJSWEFLZ3RCZHR3UUt0QnVZL0lIajk1OHJ6V296alZYN2g5QXhCcHhxYQp1TnhCcjFkbHRBZksrSjE0VVUxakxvZUZLSEcrQlJJTGpaSDhETlNhWldRSWE4cEpOUnJJcjdOek8vS3REQ0FCCmNVR2M5NE5XQUhOYVRHaElJNENiZHJ2U2JvaWJwZXJKWjdZaVhHY28zdmdiUHU3TzUzZVFUaURRL3NVdXdaV20KMVM5c09EQmNGNkllWTByek9VQnAxeFkvOVR0UzVKY1ppdkFXRkI1U1lFQjFUSW9yVmVrZ1oxRDJZd0lGQVNNdApTeUV1SGNPWTFEd1dtRWNDZ2dFQkFQdURHNDBWYWxaa2JPU2JqcGRjUkNkUUhuNGVrWVcxTjlkRHZjWitZN2NZCmk1SGE2b2VGVXA1aGNKWEdEWXd2N3pvZU9VbUJxU3ljYzZpUGwzbWwrNFhySHQ3eFg3WU9vNTJRSFdlTXhCaHAKdkhpd0NqUW5xa1FRMlF3WnYrZWZwekJENXptK2pjcE9zbytLeHF5dGNVdUNlZ3FpNGVoNVU0dkJHVGxndTZsVgpUeEowdTNvRk56bFVNTVEybFIxdmtNUmlVcVJpWTJVNzZ4Nzd0cm92ZzhMVUs3aXE4R1FNRTNQUjJnaUJSc3dWCkZwdlhqdHJZMmhHbGt5VGJyTXJpL1AzV01HRTU0dWJNc2VMU01iTW84VWJrLzlDM0lVSW8rMmxrK1Iwa0ZKTW0KbnQwZFZrZXNUODl5VzZRQStta2JKa0dHTHplQzJDWGNCRWdCOFJzQkhwOENnZ0VBS28wYVYwNEkrMkhOSEFEUwpveFR5N3ZoVVlxRzNXdUdDc3hiSytjR1V3c3lUTjRiNjRuay9TSVdXYTFCL0FUeU1INmxWUk1aL21ERi82cGFECmRQRGN0M21ZSnFob0I2TnBNeXJmRk5uSGpKVVdrSzZvUmtrb0VId25hSnFWWEx3VG90R3d4N3RicnBFR3YzM3YKeEllZ3lMa2F4TEJZS2VPeURpend4VmNlZlQwc05zQ0hTQkx3enNmN2hMNHd4MzdCQnNDOWU1U1JUb1l1aTJ4RwozNzMzbHVjZWJWTHhvQjRxNGNyMit6SkFwQTMzaTR0WkVmUXFZSE00Z3c3TEZjNHVua1FrRHRNVUpMRzE2V3ZqCmgrQW44SjFBV0ljeFAvTEZUenJ0V2dENWl4QXQxRHAyekRVZ1lNeXhNTCtNZzdFcDRHdkdWdHJCZ0FFb05XZ0gKR1JQalZRS0NBUUJ5VUYzR1d4UnczY1lzaFpOaXNqbjcwRXQ3c1RNZEhZZWEzSncxeXA1Unl1TXMwTjVGNkUvcgowb2ZVV3ljdkwxNUJBUm15a2k4dEtwTGE2eURDMXJFaVpnSXEvSFF2RUNwSFpBZ3BWMjZOVmdtbXBRU09QZlVDCmFOSHQwUXBMSVdKZzZvdit6K0FzTW1hd0hUZzlwYnRYd1o3c2xLbXUrdTRCR0N2NXkwQ2dMemo0UDN3eWNvcHUKRVJqMUpZWFMwakZ2UU8wazc5OFRWUStCanBDM3dQN1hINDRicWY0R3l3SlFZdklCYVppZkMzcXlMR0F1a2Q5VApvL2prQ01CWm1wKzRVNUM3c0E2MExoY3Y2NjlSS2V1MytEOVpRdExuK2k2QzhiVFVET0VaSExXWjlFcVIydnlQCllmL0s0L0xzc0wxTGpNeUxJM3BRZ3RhalQ5YWhHbm9yQW9JQkFDM0Jhc1JUb2tjdHd1TlVCVEZmMmp1Z1E3WVQKV0Vkc2tXQnNZYWI0Y21ETGFycmYwZnNqQ0RncXFJWDNNM05CRXh1SjBZSkNCY1B3R1R5b3Z2cWdGWFVsWlQ3eQo1OU5UVVhCYmRMeWpPZThlWlpFL2VwbWxxdzREenFyamtteDVtQ0VwTktHWGsyanJ5djFZdUNJc2huVmNsMVR1ClRpWGx6Q0NRdm1xMWJQRG40cWNXdStHWFdQKzZad1VMSHd4YzBEZHlPY2V5TElaczlvVC82Wklod3BrajZ2OS8KN1NVUGlvK2VDSTVUTDU0YjJWUmZxMC9FOFlTV01zVzRqS0xMZDNkd0NIRThLem1pNTlkOEh1SDl4VnNRWG1OVwpuam5MNlkvZEg5cXp5RGo0NVI3VDZGQWZUTHZMRWJmWVdCWWR4YU53TTh2NVM5UXZCM25Zb09QZ0FVaz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
    "etcdDiskSizeGB": "[parameters('etcdDiskSizeGB')]",
    "etcdDownloadURLBase": "https://acs-mirror.azureedge.net/github-coreos",
    "etcdPeerCertFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.crt",
      "/etc/kubernetes/certs/etcdpeer1.crt",
      "/etc/kubernetes/certs/etcdpeer2.crt",
      "/etc/kubernetes/certs/etcdpeer3.crt",
      "/etc/kubernetes/certs/etcdpeer4.crt"
    ],
    "etcdPeerCertificates": [
      "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEVENDQXZXZ0F3SUJBZ0lSQVBkY2NHS1RSUTUwbFFvb1lnOU9rNTh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESXhNak0xTnpJMFdoY05NakF3TkRJd01qTTFOekkwV2pBVApNUkV3RHdZRFZRUURFd2hsZEdOa2NHVmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBTk52OVMrVVVvM3dyV2hGVDRYL2Z3NmlCNW9XS0pySEVYTlpvQldIWU9ad2hVOTZIMXpMTFlLQjR2UFAKdHFhazYvOTd3ZXF0aFJ6RUhESkRiejlCbW5tQjQzQ3pleFAxY0J2RnZHNE0yL3dOZEhVcXFoYnNNL2ZiSDhGeApqK0YzN0l0bk5OeXZ4SU15b1dVcTkrTFFML2FUQmJ3YzlncVR6TzZaOEwvcHF3MFlYMUNBbTZ3MEFHb2JxU1kyCkhPMXZvN1dyQURQYnc5Umg4bGZ1NGcwUVdtbnRjaWdidms5MWFvb3Zyci9xWVZiczRTRW5kZlRNR0VzaFJ0d2gKb0hsUnk5bjE2TktMOC9jSXkva0JKRFJlYWhhbkllVlNzOE51SytieWpWcUVMdTQvZFAxRjQyU1F2c1loeXBmNApSMFVabHF6RmtpTDJ6dHNFMXRQQlhNUUtLaHNCTjRQeUljTlluOE0reG1kVzFzZ29oakppUmc0MHZvUEN3RlFsCnVQU1VNMm1BN0RKVlJGaUd6V0RUSlJHdW1peFc3blRCUkwxLzdQMkZzTG1BZE1MMmVJbnl0Ny9NM3FsS0JpQzUKUG5iY0lxbHlCV0VqZzA4Szh5U3c2ejRZRnBIdFlibVFPNDZlMmtFMWNKd25TZGY0dDlRTksyN1NFdG0zQ0hhbApYUUYraGszc3JGN2xONDdlMDBCS3VlOWRTV00wY0lhQXFpK0ZMS1g0aGYvdjlKdkNhbXZHUlRhaGcyeWUwY2tyClRaMkI4RUNLTjBoZFdvcUZ1Y1lLNDF3Nmd6bk1UemkzWGx4bDcwUnIvc1VwMVBiRGEwSHhJa1lMSXZZZjhYZGgKWDF2RzhWcGJPSGhicUlrc0xUYUozcG9KY080NXB0d3lmTHhSN05ud1dtak9YTU5aQWdNQkFBR2pZakJnTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWhCZ05WSFJFRUdqQVlod1FLLy84Rmh3UUsvLzhQaHdRS0FBQUJod1IvQUFBQk1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUE4eWlyOGJuQkJDSjd4ZEJNRGR0UXJMRWdweXV1RUhvUklna0MyaGxkOApseDM4SXBHcDlNQXhFKzR2Z3JxQVBkQ0FreCthZ0NYU0lHa2VUbDZKQ1RGS2d2dWVTaGJ0SWxQMWI2dDNmcVdPCnVZTmtJc2hUbFpPay8wanpmSFBJTjNqSXl4S05VUDlSY1hKQkZ5MTRJUlhOZ0M0dG9HUi9LMGd4QzZvNXZvMjAKUlo5YXZ6TnFUdVd6eEZRYW1OUTFtUmZSVnhpRFZ3cWs5emdILzYzTzVITVUwTkRRQlh4enBPaVdVT25yRThLOQpnV0V0SUx3SXgwRzIzRE5KVC90MEd2Zzg5MTdWbW1hVHkzQ0dXMEszNVJmK3JnT29wSmpUcDNJc0NCdmpRamxiCi80TnN6THEyM3hBSGsvMmhSYzIwdFM5SVFWOUoyVS9HUDB6NUQyM1JQbnRvOHJCeFdhcXRHcXVCMFliR2RhY0IKWi9BdWxMb1pqYmtFcldqUmZqNDhMRUtvblkyVUNSWmZ1ZVJUOVBrR1Rld2FINE9ISDRSakhRZnN5WnZyUWgyZQp6eXUvMUJLOFpSd2Q0MTZ4Y2FqZ0o0VC9SQTMwT1BvaUd0MHZDSW45azlVY05iU0lrN1VZcUtSYUczdU1wQmVpClJ2RjBCMHdwSzJqMVE3QU9ETlRBajJ2UWZZRnBCdTUzSDRLSWxXblRiam9XVXFVTnI1akZtNHRVYXEwVUY4bFEKaStMaGVPUFRjckgxWTJBcHhEN2lnS2VXQ0ZnbnJHNmluejVESmJBbUFkZkw0UEhaenhGWGRLa2V6NlFSa2xzdAp6Mi8wQUltVTVLRUtXWEtUaDhBVG5MWE41dDRZMm1GdzhmT3pTOEJma2tOOVNvVUJTbmhlWDBLbHBwdTFET0JzCmR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    ],
    "etcdPeerKeyFilepath": [
      "/etc/kubernetes/certs/etcdpeer0.key",
      "/etc/kubernetes/certs/etcdpeer1.key",
      "/etc/kubernetes/certs/etcdpeer2.key",
      "/etc/kubernetes/certs/etcdpeer3.key",
      "/etc/kubernetes/certs/etcdpeer4.key"
    ],
    "etcdPeerPrivateKeys": [
      "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBMDIvMUw1UlNqZkN0YUVWUGhmOS9EcUlIbWhZb21zY1JjMW1nRllkZzVuQ0ZUM29mClhNc3Rnb0hpODgrMnBxVHIvM3ZCNnEyRkhNUWNNa052UDBHYWVZSGpjTE43RS9Wd0c4VzhiZ3piL0ExMGRTcXEKRnV3ejk5c2Z3WEdQNFhmc2kyYzAzSy9FZ3pLaFpTcjM0dEF2OXBNRnZCejJDcFBNN3Bud3YrbXJEUmhmVUlDYgpyRFFBYWh1cEpqWWM3VytqdGFzQU05dkQxR0h5Vis3aURSQmFhZTF5S0J1K1QzVnFpaSt1ditwaFZ1emhJU2QxCjlNd1lTeUZHM0NHZ2VWSEwyZlhvMG92ejl3akwrUUVrTkY1cUZxY2g1Vkt6dzI0cjV2S05Xb1F1N2o5MC9VWGoKWkpDK3hpSEtsL2hIUlJtV3JNV1NJdmJPMndUVzA4RmN4QW9xR3dFM2cvSWh3MWlmd3o3R1oxYld5Q2lHTW1KRwpEalMrZzhMQVZDVzQ5SlF6YVlEc01sVkVXSWJOWU5NbEVhNmFMRmJ1ZE1GRXZYL3MvWVd3dVlCMHd2WjRpZkszCnY4emVxVW9HSUxrK2R0d2lxWElGWVNPRFR3cnpKTERyUGhnV2tlMWh1WkE3anA3YVFUVnduQ2RKMS9pMzFBMHIKYnRJUzJiY0lkcVZkQVg2R1RleXNYdVUzanQ3VFFFcTU3MTFKWXpSd2hvQ3FMNFVzcGZpRi8rLzBtOEpxYThaRgpOcUdEYko3UnlTdE5uWUh3UUlvM1NGMWFpb1c1eGdyalhEcURPY3hQT0xkZVhHWHZSR3YreFNuVTlzTnJRZkVpClJnc2k5aC94ZDJGZlc4YnhXbHM0ZUZ1b2lTd3ROb25lbWdsdzdqbW0zREo4dkZIczJmQmFhTTVjdzFrQ0F3RUEKQVFLQ0FnRUF1V1lBZm5uMmNaUEsyaFY4aDZqalJuZDVadmxySFZ6VXhtcWVYb0pZeTNkNnpaZnVERFgwYisxbwpqaFZpdVhqL253UnJvMVlIMUpONWpmRm5pUFlEZCt3Vy9PbkVVRm4wdGNXTFZveGNFUVhUU2pIZzl6eWl6UUVOCk5WaFlxNEcybnY0ZWNpeUZpZTFKYkNaak9qVUcrWlV0Z0NkODd3VnV1d0d0QXZyb0RCR0U4bGZ6S09wb09xS0sKallFQm1Jazk2YnhKN3k4UzVoWUVwR3BKT045UUNIWTJsVWpPZFdvbHc0blFGMlJ6ZWY4MzRSUnk3L1pPandKYwoyZ1Y2YXliNE11VFlCRmJIMDZPWkIzeWl2SERWWVl1bnd5ZmpqTWY4SXdRb1FtaUpwa3RxVC9PS1V0SkJGZ2JuCldKNVNFQnRCN2JsSVRQUlJxZWJ5WUxlNm1nTzNxbUk1YkpMTWIvT3BmM28xaElzNndXZEpuZThxdGpVQTBFUTIKWGJNT1RFcFpabjVoSVVvRnhHOFpGRWZyNVJES3pORnRlOUxTQVZkZXRNS1NvNjZRU25NT2xmcTRHWlNzYlhoWQpQamdDMStPR2lHMGZzUFJxTTc2dC80M1RSS0ZhT2QzVndSdXJYWE5jNGJjWGhsVk5yVGMvZFdHOUlQeE5QcEkxCk93cU9hNERUSDlMTjhIR3NkMDVGNFFEOW43VmJNQ09rbDFpbSs1TVg5YWxLS1lCa0ZyR0VRUjRiYlVOZlZOdnQKcWgvcmlneTdHN01Qc1I4cFhEeWtWa0JjN2lpSU5xQjJWMEJOUXoyYXpvSGtUWjhGRUpKMlJPOUYwZXhxY1pqNQpzQTFuZ3dZVGlpYnpmcUI1T0VwT1B2dkxjK1AxK1RsSHJIMUFXQitxdVFodXh0K21XQ2tDZ2dFQkFPdWx6ZFhTCkRDOHZUWUtoUGJKeWVpc2RJRlRBZXYxeWhqMC9SU045R3FUbSthWW9zMEE1K2JaT0JuVUVZdXdpTGdZZk1GZU0KYnpSOExQdGZFYWpEcTZqVDd0d1VqRW12NEpBbndBWHFVaWllbWlhN21Ea3RxMnd4MnBQaGpkWDJERFZRcHpacQpSNVVVSUg5YVN5YlNOTGdRQWg1TE9RNlQrVkttMFgwczdpdCtUa213OVIyMy91UUJlcFJNaHNoaW5GVXpSSUZoCm5ETnNrRHNZbzZpbmx4OSs1SFVuQUs5dUVrWkgrb1RNSVp6VmxXd3NhL1ZRYzJ5ZjVud1NHbkxLMll1eTZBTEcKNmdyQ2ZYUU5PY3U1SDNZL1BTejZZbUE2NXp2TzFFK0t6Nk4wQ3A1SGtMN0tFZDAzaWpjUWZxcFBMZzZEUVhXcgpmWW5jVlN3VGRCT2NkTnNDZ2dFQkFPV3kzRW1NeDFVWEIyMGhXSk1lZzBjeUFPOFhzZy8zR2szTVk4dVN4SHlHCnVwSlNQU1ZaYkdGRFdYam1lTU9weURjb1VucmFtU1dzTUEzNm9tQW16T1NoTUZZbEY5cUJnQlVmU21xYWllZG4KVVVvRnhMbzFZcmZ6M0FTaGVIL0pZOGd4M1NDYlV5U2lqQUJCRTROTHpOSWFIbVBkbjN6WnFXQ3ZVRWp4SXovSwo1d2RTdjZTYXE0Wm1ycFJSamMrQlEwOFdYT2haUXgxWWxtT2xVWGY4SFN6ZEI2R3RKRDloYmx3eXBPdHNWU25qCjRadVpkV08rS2tmTE54ZDhWQUw1OXFLQlVnVnRIb0QrK3pZZXdRUHpCTnZCK0Z0d0Q1QnhldU1mYnhGNXoxckgKc21SYyt2SmdFaUlJOU9zNFQ1bzJUTVA5QzI1aDNuRVlEOXZGemlZaUpOc0NnZ0VBQTZPSHppbDBMclpZU0JBZApWOGdVd3Qyc1JpTEN3MjhsUzRUU21IMnlENkhSY1JObjBUSVQvUkN2WU5jMGY5ajNSUGp1VWl2RSs5Wi9DMUtvCmZ5YW1XL0VKMnpRbUJtMUUxblVHcmhDMFBCUlc1UW80aTRsOUFDcTA2VnV1U1FPSHBMc2VHZVVDUGZjVm1XSFgKanozbnVuL2t5SHI0NHBTK1lOeGFsOGc5MVVZYUIyRklKN0ZUcWttcmp1YXZuaUNIc1hrZE1iSkVLemNkOHd1cQpXMHhiTlExTWtkS01YQ2tpOXhyZGIzZUhmVmgrK2pDbGFpQlg1L0dBS2FKTjdqL2JwQ0NiSEkvZHhWVERneXRCCkhUZzZtQ1RaMlB2MDBPK1g2b0NESHNkUjlZQXhPY2g1SDdrWEZZZHFCdmVtUFJNRDd3MXYwVlZZbHV4a0ZFNG8KbUxUdHlRS0NBUUFkVHNjQXMyK3prYTZtNC94VE9TOXk1QlJ1YlUyUTcreHhSTVR1OHBrVGNuVlh1aHFISzNQQwpyVDg3Ujl6Y3lrcjdqcStIY1dEZEI2MVIrMHJBamZMU3NTWmp0M1BsczJST1RhSEhIRlRBSzlTWlowY0VvMDhuClBYd3pNdzhXN3ZGR1YrWnBCS2lGSWlCTzMvN0hYK0tRWkRqQWNVU3FQM04zSEtkWHh6ekNKUGQ1WGJ1S0d4b0wKbWdwb2JrZHoxSUJzRk9SaDJSSFJLcjUxbEdCaXVNNVlMUk9PTTNOT2l2WHoyWnBsVjNzK1R3ODROVXBmSWFKdgphcVJxNExndmNRbGhEck1TY2l2VU5iU0Q0VVNyWmxTV1haZDh3ejJaSm9HUmZTOUV3WkFOZXpGdDBOZE1HYW4yCm9jSHVTVThPMUNMVFZ2UWdiMmhjY2IrRVFTYmVncmpGQW9JQkFEVHErRE9MYjdVWjhBTnNtRVU3MURkdE9FMlUKbm96TlluMlRDTi9FcnplbExnTEpLMm1qR1BXVjRHNUxMdk45Z0NTQWgxZXZZelp4UFdHOVFaVkVqN2JlVUxGSQp0RnZhdTRwMTRJNGNlZ0NtdVBiWm45Zm9iYnVCQ0lRcXlDTW1EeFFXVTZ0RzV0S2V6Um94SXhTUWtidWpJUzhJCkJHa1hqUm91VWNwSkpPYWpGTVVZNGJ0OW1JL0tXc2RhY1gwcVNiTzJjREZYaHdwaEgrenJmSEdjUG9oY1RiNzEKbzI5dDdKSUQyT0pSMzBvNHdUMGxDdERSMktlR0xDSjVDQWJJRG9YcFlQRWtyVHB5SndZbzdHNlJBWE9lVDlxZwpOWTNwT2diYzF4Mlo2YlgvRnRRWnV4RlVYOWlmclA0UFdEMnBKUkJ5dDU5YUljY09JUUY0S01LdEpLWT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
    ],
    "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
    "etcdServerCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQU5MMmpsVnVNdkIrYzFVT3VXTlkvNmN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESXhNak0xTnpJMFdoY05NakF3TkRJd01qTTFOekkwV2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa2MyVnlkbVZ5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBMHVKK1pmc1BicEtraUo2QUZPVjVnRjVxODNhV2F3YXBrV3IwYTZtUGthcFExWERzY2lsM0ZoeVQKcEdYaE82M2lrU2NSOFFGYUN3K1VFM2NTcTlzdmwvRWNFWElROTNaR1ZxUFp4TW9xQ1B5eFI3YmYvblgwYlBYSgo5WCtLQXhVOFdETXBubGNwOXozRVJ2VFZWVVBBbktHNTZoWktlMHJXMy9HQW1wUjdoaDFyWDQzWDRlRkJEYTIvCmQzZWsxR082Nzd0VFkvZ010SEQ0d2V2a2lYVXZ5c0toc3BPbm5WUmloUGY2T1VyMUZsWXNucEFPQ2FocVN4Y0IKU2Vyb2V3YndhaHQ0RlpKcU5Vd3FXcTNvNFEzaW54QjZNZGFheXRmYmZJZ0pzbnBtczlWdDZZM012ZWpsRDhBbQova250TEloQ2RWc2I4TmxCRFNJWmJ0NzdibDJLZUtCRW03UGxYeVpPZDZBZnZqNnYwYmJlcmNWQkl0OEpuV2VXCndRekJKTEh6SThkWEd3N0djQlh6NnIyZ01XOXA0MncvS1l6cTF4ZVlYMlYySC9QQ1ZNUGdydjd4U1hsMlNWUXgKcU1kMVIwZ2F5TjBjYWg2OGp5Z3ZYMEVPaTYvT3p6VEY0VXlFSElOMTh1TkJEbHlzVFhEQXZ5ck1rZm9DSlJRNgpUd3ZoZEk2Rit4Ujc4VDNFd3BrV3d2RXUyb0tsQ3FYYlE3TllwaEJKd250Y3lPaVRmdWRiTmF6ODZVS1VIMlVhCnEyN0k4dDlTa3pUSXVpbC9rMzhxMFN0aFN5RHo0QmluRUpqbG1WWTFQc05Yb284NzYxZGJVaFdDV2ZKSENKVXkKeVVBcVFRQVFvSngzS08yaGd3QWJqbnphNVYzaFBPTG40TVNlWmFNa1EzQzNSNWhMc1IwQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkFyLy93V0hCQXIvL3crSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUNheExURVFtR1B0SldKRFlMZmtUVmZNUCtSYXJQMmp5VFZLbnZZeApPNEVLYTU0ek5Yb3RJcEFZNmNIZXVzTGdLNno2TFkwWmlmbE1lcWpqWHRPUTNOak9LSzg3TVBua21mNzNvK2hTClAwQkV3Z2pMVnFDQW5tMXZjWWlBMnpVc010T0tOUTN1WlVtZzhoY2hHZ1RpUGFqNmNqeUpoTkVDeE9NRWk2ODYKRUUzTnBxK3JFT3JkbFR3VDJibVdLNDhHWU1RRVVEcDBZVUJXYldFanR4VlU1M0NJZ3NiQ09CdW9KYXd3a0pZQwpNcjNUV0lQSGlscjY5SWhCQkJOVzdjTDQwZ2ROQjB1SEp2L0dUUFNvMFVYK2ZqeDNiN0Z5dDFsM0dXZUdRWTNlCjNpQzFEYlF2TjZlbFVUaEZ2dGd1WDFWU3RXbjdGY0NZUDd6K09yMVhmN0VEQ2tDRWJCU3BHd2hJZk5KWUxKc3kKYWN3NTBmY0lOY1dZUDgvZWlRU3ZvbFB1YzJRUWtiUEprVHRWNmdlZ05udUdLZGlid0VDbkxkai91Q1BlazBLdAo2TVJBMnBGSWZzaDRjK2UxcGpQNXNaOHh5QitGMmZtVE9FRktsTkxBK2h0RVAyV09vYjQ2azd1T1c2bVZGandKCmwxOFJ4WTBUNjAxdlREb3BSc1FDb0pnaTZKNnNDZzZ3MU5jL2NoZjlTdzJKbzRkWEFnZEZzT2Z2cWFKR2w2KzAKK1pXWXFaSmVWT2FOYnJ6RUJaN0YxRkdIS2t0ZW5BZG1hVFZTSnQ0Y0s4alJqNFpiWkZSRm5tRkhXRENaRkV1LwpWTThaR0daTlJnMG43NFpNL0xjU2Q2VFZXMUw5YjJBUlpPSktDVnNQNWVIUVQwb0JGa21WS1VzMnZiSTBPUElECjZzQ2QKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
    "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
    "etcdServerPrivateKey": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBMHVKK1pmc1BicEtraUo2QUZPVjVnRjVxODNhV2F3YXBrV3IwYTZtUGthcFExWERzCmNpbDNGaHlUcEdYaE82M2lrU2NSOFFGYUN3K1VFM2NTcTlzdmwvRWNFWElROTNaR1ZxUFp4TW9xQ1B5eFI3YmYKL25YMGJQWEo5WCtLQXhVOFdETXBubGNwOXozRVJ2VFZWVVBBbktHNTZoWktlMHJXMy9HQW1wUjdoaDFyWDQzWAo0ZUZCRGEyL2QzZWsxR082Nzd0VFkvZ010SEQ0d2V2a2lYVXZ5c0toc3BPbm5WUmloUGY2T1VyMUZsWXNucEFPCkNhaHFTeGNCU2Vyb2V3YndhaHQ0RlpKcU5Vd3FXcTNvNFEzaW54QjZNZGFheXRmYmZJZ0pzbnBtczlWdDZZM00KdmVqbEQ4QW0va250TEloQ2RWc2I4TmxCRFNJWmJ0NzdibDJLZUtCRW03UGxYeVpPZDZBZnZqNnYwYmJlcmNWQgpJdDhKbldlV3dRekJKTEh6SThkWEd3N0djQlh6NnIyZ01XOXA0MncvS1l6cTF4ZVlYMlYySC9QQ1ZNUGdydjd4ClNYbDJTVlF4cU1kMVIwZ2F5TjBjYWg2OGp5Z3ZYMEVPaTYvT3p6VEY0VXlFSElOMTh1TkJEbHlzVFhEQXZ5ck0Ka2ZvQ0pSUTZUd3ZoZEk2Rit4Ujc4VDNFd3BrV3d2RXUyb0tsQ3FYYlE3TllwaEJKd250Y3lPaVRmdWRiTmF6OAo2VUtVSDJVYXEyN0k4dDlTa3pUSXVpbC9rMzhxMFN0aFN5RHo0QmluRUpqbG1WWTFQc05Yb284NzYxZGJVaFdDCldmSkhDSlV5eVVBcVFRQVFvSngzS08yaGd3QWJqbnphNVYzaFBPTG40TVNlWmFNa1EzQzNSNWhMc1IwQ0F3RUEKQVFLQ0FnQXRVUFIrYjZQU1MvckZUT0lURzNpdmlCcU5kTWMvK20rSHl5YjQxN2Y5UWs4YWZxaWdvNTV1aHZlSApGVW1BTEk2S1NJNEhieFh0V0l5bVhpa0oreERRSXNTNFR2MnNYNk1melJmbnZOV3BscnQxd0t1RG44OUZkcy9PClRIall6c0JuNTU2aTR2SW1xZ1E2aHpRc25XR1Bod1ZQY3pqUUk3WG02NXVLSEN3ckZybFRFRVQ2eWcvVG82bUkKUDVLUS9WbFhXTGJEdmJMbE4zMk5GbWJHendMVkhGdm81dWZXM0NKTGxvb1RzN0xVK1BHZnBTOFBEanpCSkJGbgowKzNmT2crQmphT1JaeVFoamR0d0h2enpGNnZDS0tWSmZtZEcvWG14MmYzVGQ1QUlSdTNXaVYwYzFpWWE2MXkxCnVpY1lNYk91U2tUSHpiZTMzY0wvV3pWR2N4MWxDSVpXWVZMTUVDR3VlVEU2VDF5SGlFdEhzOEFNZno0MTdJUisKdDc4dk1wd216U092cG9wVTd2KzlkRjFVVTFCcXV0SVlTKytJSXpYQlFlOFN5TVBQQmw3WHZsSjhWQnhBd0FZbAp3TXNlaXlOZ2h6Y0gzdjJMdjQ5cGFXQ2hGRjliM0N4WUFoR3NTZzMxV2MyN09NWCtjcEhzOG5zME1zZ0J5aThMClcxUkxuRzk0RlM1anI3WCsrOVJQK1JRdGs4TTVlbGlVYlVoL2JZMm0zM2tuTHZzY1k2bVhITWVxby94VzVOb2YKb2prK1FxNXpPdnlOVUJuaWxHZzFIaWhrTVFKaVNPdDVSLzJKRUtqTHFxWkFNN3VWekJ6Rjg3ZCtWOU55NEVaVwpaaHJ3MHNvOXhqdU9kbmhVSGRkMHA3MFZFdDRiSE1mbFpjMlUxZGRNcUIvcUhteERvUUtDQVFFQThROFJvVTV2CkdCSU1yTlZLWU1tQ1dsUW9BSllRNWZlSTEzUUZQMVczTldtdHNrb3N5bFhGbms3dHl4Tmsrei83RnBlZGRBNmMKQ3RiM2NYb2Q0NDFIWGRVanhqOUY3d2ZrSWJkN1F6VWJqWnFsY3RpcWN5c0VEOTRnWTNOTEpKOWFRek0rd0hGQwpaMlNMbFA1MkY3cGNBSVU4Slo2QmlhSE90akxGVnFIbmJXSDYwR2tKVXlsamtwR0hXdStPdUo4d3l3Y3BmMERRCnNJRk9QTkluZksva29vNTZhUnFoTnlYM0xVcGNLOUtxRE9DRmQzTHFndFpPcHl5OThESC93dnM4ZVNUWW1CdFgKcFBXQVpYUjBmY2hyV2EzanFVdm5LcmpoaFZaSSt4NzAreE5JTEx1WSt3OUNHUjVvejVRc2VQdllMSXArblJScQpvUjlyclNhNUpZS294UUtDQVFFQTMvU2xVOWhmRFNzTC9iWlVYelBKVFdiOEZvS0haYXZGbGJWczR6ZCtpb2NTCmpYMGNVMzNrREpCcnF0d3Y5MkIxY2hhRmYzcFhVanZLSis1VFA3dFdMZ3FQWmo3QSt2OG1HTFBxUGJqNXJoRjYKSVoyTDA0akVwUG16ZXlMQ3FWRUNVbkI1clBhZGVSUjhoaENmaUFTTnBrQWpSUVNrZXYwT3B0OFpzRTluVGxrRQpSWHV2bmhWakdicXBUVWM2VnVNcHdUSlNvVnl5WVhRMXNSU05pRWNWY2xYNnBScUVMd0ZCVmlKYkpNVk41U05BCi9sTkhhZU9FVU5ma1UxRFlNOWV0WEdacnlKcjVpbU1ZQXlVRjduc05aeFM4UlJxVW1sVVVTZ2JoT1FwZkJUVGoKRWk3VmpPZmx0L2hreVlMcHIwU1MwRTMzSENqMEJSYXFsWUp5S0VqOGVRS0NBUUVBb0FnVStEV040emo0V1RVdwpMNWtYaE1naDFtSEp6aUhMSXQzUExnREZwQndJU0RpZUM2VnRrRzl0eGtlVjNvYlhObVJwRDBjenFLNlZqeXcyCjgzNHpSc1BkQUJ1NVhicXJaUWJlT2Z2ajB0bzd4RWE2d2NKbzYrL1hLSzY5MEE1S2FocDNLbU1HWm9XRmRPQ0oKbmE4R3JRSEdzR0xPTklUTEtvSUNLRVZMMG40ZGVJYUN2a2JYNTlIZFBpMlRYbFd3bXRpaVgreXpucm41S3IrSgpuMmxXSytUU3R6d0trd1lOVm0vclNOeU9NQVpPRk1LaGxVS1k3THJ6VGFhajJOblpoOE5DVjVpdlVyLzVBV0dTCmhINnRaZGZmTCtGSUVrQ3kxMFkxSlNHa0dacnZhMk1QYUh6MHNLQlRqSnNkK3lPV205dEZ1eHAydjRpUWYxOFoKd3lFKzBRS0NBUUJ2YlFwZzZCT0t1ck14bldqbklSM3orOXhLMnREQTNqRGxacW54ZHVmbnhvS05rUVRwNllYdwpWbDZyV1Bnb2pYNkJzQURseHhueEdUeGdsNndsMW5CdlllT3RER1g1dTc3WnBaSlMrVmlJcWJ0cFJEaVFtOGl6CkNHV3JTMFVzOXRnLzZpUXYwVmZTS1VZM2NjZmQ1ZDRRTEhNZjRNcHhRcnpxZTdBTlQ4Um5iOVMzT1czTUtubnYKRURjeDh0RnM3NE1UMDVUWElnYkNoQTQrdDZvZmRyYU45NGRJWkNRR093cWw3MXdIdEg4b0ZWMDk3SE5vbE1GOQpjNXp2Y3hiTzNHMHR2dXU3bUplMXFjNEZxb01ELzRkUWxUbUM3RkdwWTlFL2I2TFpQWGEvWVd2azNSWjFEOS8wCm80cUoxQyt1ZTJETWNTNFVmYS9EWkY2bEdvenZ6RGlKQW9JQkFGdklFYU96VjBYRFFNV01EaW04SzcrNW5GTDAKU21zc2FYWHQ3bExpaU9NYlVua09VWDJlYjRPQzl4U0hHNzJTOTBPd2I4NXlsWW9KbnlIKzFCVWVMYVV0anIwcQpHNmRCNTUrWmdCdklCWFBCUVJiNE1EVnlxd3pmWW82QzhoTlJKcm1BbHR3L2JmSmhZZEpUN0E2Nm90MEZUV1lrCk8rcXRoeTVzdVF6ZlpXZzg3S3ZYZ3U2NmQxSjFFMEJiVnNmcGJDcDRVZjZVSEsrbDNpNFIxTXNER0xxQWN2VCsKVmduRTRqUGxWb3A2UmR0ZHA1cENZbWFOckd1MndEMjYrbkJBUzVmMG5uOVBiUk9kV1dMYkNrRTZFcjNUM0huTApWZys1cW81Q3hYOFlKbGFYZmtacVM2eUg0ZWtNQXlIRHBUR0orR20zM01EUTA0YmZsNHJ1Y29GVk9maz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
    "etcdVersion": "[parameters('etcdVersion')]",
    "fqdnEndpointSuffix": "[parameters('fqdnEndpointSuffix')]",
    "gcHighThreshold": "[parameters('gcHighThreshold')]",
    "gcLowThreshold": "[parameters('gcLowThreshold')]",
    "generateProxyCertsScript": "H4sIAAAAAAAA/5RW/2+jxhP9nb9izrbOiXQEcC7ffPLnI4tQXZQ0STGVGrUVWsPYbA27ZHedxL3L/14tNgQc4179k5md9+btm2FE94M1pcyaEpkYhuRLESFYPFcW+Xsp0Io4U4QyFNLKBX+iknIWrtOONOLev/vtIXTH4bX3MOr0vtWfhyNLZbnGvazMKKXIlBmRowWuXjsl0A9qKD9ogURCvUFurrzbYKteFdtB0Cy4znQn/ju0O/F3oSMp3qEbqqvYTnSh3Avcy9D3fvnVmwRfvfGl51ewsWbadz4crRkjFEpaAh+XKFWCJEbx5pA5oymWhTa6vLXKrVCTrmk0CrWDaON0M7KHZoGrkuX6fBJWE+H6QfjT1Y13Pw6+asLWw+HIQhVZi+UUBUOF0mpUKcfhDX/tPbQw10/20m6GpKapXe2PSt3oNPAl50KBNtANbkLv9vL+7uo2mJSuNoLDUaJULoeW5QzOjuwj+8gZDo7PLl472zzuuJBRZ9mE2lRV1m0xlS7VqcpYGxeqKG68X9vqvI1NDX1l8AdYG0r98e1lQdY7yBYKs/zQMLowR4aCKATBuQJ3bPAcmZSpPhCSgMmXCnr1lQQD+/N5lSbwEUyGz2C+nNgXYMZkJcE5H5yCHuItZIPMD8CUy+lf0Lfc21HRbbeQ7Y77dWGaXN9sr7JqebWpq4t5S97B4U78ui4ynwucE8WFdTeSK6kwG2ZEKhSyX5VZX70oVtz/7NgGk7JdzO64YYA73uGSRBVKFJSkYA92avQDw3gWVGFY9DxUPIypXBwcwjcDAKCYAaWtUtDbtxnhf9BrXSItVNVaaILre2IvUk/wVt3tol3wMeNPCM8JVShzEiHkJI4pmwNRMMU5ZUw/8Bk4UkFKGRZAiTGYFPqOtP6QltXfc7s2AXvvFCUZj+HUtluzXnd2JnymKgkFKrGqmjTjAihQBg4M4Bg+wwmcwhmcwwU4NjgOOIMvEPMiV/920FZnv0Pv/2DiI9gAf8LHjzAVSBbw/TvIFDGHkyIz5gy1wC5MUx4tYMkUTYGkadEroBIEknhlFDqjLA7pLJwRmi4FgmPbcKKFlW2N0qV+DcwESaoSows/kwWuiRa4kp+g7BekSIp/tWZOMSJLuUl/5qyvgEQR5goIPJEUVFK2WYK2Dgj0zT4cJKs8QXb4waCzSki2+JcZ70DvICIKah9Jr4edL6ASZI1JrZjeRvwdtloer4edfeBiylvQawHrga21Z//cGF24mmnNRcV1wYhnGWEx6CZh/GltW4aEySJR7xaSFj0FfKFSSQNTif+18Iwa/wQAAP//gHPm/+MKAAA=",
    "generatorCode": "[parameters('generatorCode')]",
    "kubeClusterCidr": "[parameters('kubeClusterCidr')]",
    "kubeConfigCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5ekNDQXQrZ0F3SUJBZ0lSQU1sSFVVdHZoa3ZuNnlUWXJ6U3BmL013RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESXhNak0xTnpJMFdoY05NakF3TkRJd01qTTFOekkwV2pBcQpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVBNQTBHQTFVRUF4TUdZMnhwWlc1ME1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQTBzZ016anBiQy9ZQlBrc3VWOXAyRzBQUmtmeVkKN2FyWGplQmpjUndsT1ZzVitLYndMdnNOUEl6NGJ4UktNVXlmdmV1TU1WUHJMN3FJdWVzZDZpSFFkbEFEbCtvSwpwVE9kcU9ucnRBSGdlc2RSS0c2Q0NkbXF1MEpMQ2JpSklpREV5eDc5NkFoQlBuTyswam56VlZuYUZkK0NDUndyCm1jV0JOTzhDS3ltOUVQelZsTlZaRUpBZm10NWpBWHZnSVZBcDhUeDdTY3BVaisxTys4VzBtTWNncW5XYkJ2Y0IKd2c4RWtFZTRzYUI3QmhnMXRhSWJaUXhxRnZnWG9hM1ZtT0doQ0wxeUVROU1XdVI3SnNEelhVdnBUZ1VqQVBPMAp5c2dybnR5UDBNZWpwclFVMG1EMElTNXpzamExcHNkSWlvSzFjaDFGUTFYeTlVUUlEeHJqNkJVOUI3TmJNMkdMCkJtRk5teDFoeUxuaDNmU3hKVWdwNnpZQVhiZDh1d2czcE53ZUEyTEdSb3lxM29CQVNBTFgzT3pJS0dGenRnTVoKak5OaExmeVd6QUNCWjhyWlE4V2J2ZUZEVDB2ZnhTeDZkRy9FZWpXRllSbEUrUEpHMjJKQWFLTTdUSGh6K2hnWApQRGN4Ykl4bHdyU0wrbnVMV0k2ZXJma0gwaXc5Y1dKMzdwOGE5OXRaZWczTUhNS3l6dTJBRy9Wb3ZVRnpHQmhWCk81UU9sWlZSb1NNZ3oyTmhUUzJEeVVyWEhaVVJKYndOS2NIaElyd21CTnpDTFJGVEw2TU1WSml3azR0cDRvT2gKS2dvTkdNTG9ub2l5dHU4NlB4TDdZWkc1c0ZKQ1RLbnYxNTNGcjNXa1JtdXFSNzh4akJhb2lTdUJGWXJDS2tZdAo4SWtwa3lwUmxRY0VESGNDQXdFQUFhTTFNRE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUY3alErS3AKa09hY3BvV2dwWlhhZWh6d0xYR2pEM1luYnRYcmVBOElRdFVFMEdYWldyQ0xUK1BLMDNmaGVZOENIV0R4SkVTdgpGaEd6WmZuVHlVV1I1UE5lKy90aWV6WDA4eGJVWTVWbmdtdFZVNEFtdDBydU1OZW05eG5oMjFmYktJRDZJRGVMCjd3U1ZCUThOUTlFUzVFSkV3Q05tdlJtRVdyUmhLR1g0MklUVXVabEttRnROYU5FY3owTmxoMWN1S29FK09EUmYKNmRETEw0WWxvdTlPNExXdWRNWitQRFI3S282Mk1zdFlGekdsQm5mczFRQ0pFSGx6UWtwWmpkc2VlcVpodnVZMwo5bGg5STVySkczbDQrd0xubnFuc2s0TlpPbmkwNk94R0JrQnJqbitDUTJpKy80ZVNFMUhtaWFYYkVOTFJFc1g1CkJSZTkzb1ZnT2hvVzFpWlVMZmN6TExVcGM0Wk8xb05VZ0VPS25QeUdhdENTMlFmN2tnSDZoK3VGOXhyUnFFRksKUmFRYUxORnpZbElOZ0tFOTlMdnBWT3cyd1Q1eXZLYWtYeU11TkJCVEhDUjFGamFiaW45K0pGZEpKMitDNUxWdworSXdVNm03cjQwbkdCWXFJemZQWHkwSHFrVXR2a011eDFGd0hrVVVhQ0RXRXpVQTJnVDdqMHA0Q0R0d2dPYWdlCmxFdjJZUHVLL2tBcnJFZVlDNzhZL1dqSmR2UHRaYmZQQUNNSDNlK09NTGhSNHFnaDU0RFlzSnpob0t1ZUFQRmwKRStaazI0MENzWmlKNFZ4U3ZiM3UyNlllU1pWdkRjbUE5U0JTVUVteUV4VmlvTXl1emp6TWRvbWtpYTFlWTdweAoxSTZ0NzcyQjQzQndCT1dQSzFYRGNCNDZneHpWYmg1MlIyVmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
    "kubeConfigPrivateKey": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBMHNnTXpqcGJDL1lCUGtzdVY5cDJHMFBSa2Z5WTdhclhqZUJqY1J3bE9Wc1YrS2J3Ckx2c05QSXo0YnhSS01VeWZ2ZXVNTVZQckw3cUl1ZXNkNmlIUWRsQURsK29LcFRPZHFPbnJ0QUhnZXNkUktHNkMKQ2RtcXUwSkxDYmlKSWlERXl4Nzk2QWhCUG5PKzBqbnpWVm5hRmQrQ0NSd3JtY1dCTk84Q0t5bTlFUHpWbE5WWgpFSkFmbXQ1akFYdmdJVkFwOFR4N1NjcFVqKzFPKzhXMG1NY2dxbldiQnZjQndnOEVrRWU0c2FCN0JoZzF0YUliClpReHFGdmdYb2EzVm1PR2hDTDF5RVE5TVd1UjdKc0R6WFV2cFRnVWpBUE8weXNncm50eVAwTWVqcHJRVTBtRDAKSVM1enNqYTFwc2RJaW9LMWNoMUZRMVh5OVVRSUR4cmo2QlU5QjdOYk0yR0xCbUZObXgxaHlMbmgzZlN4SlVncAo2ellBWGJkOHV3ZzNwTndlQTJMR1JveXEzb0JBU0FMWDNPeklLR0Z6dGdNWmpOTmhMZnlXekFDQlo4clpROFdiCnZlRkRUMHZmeFN4NmRHL0VlaldGWVJsRStQSkcyMkpBYUtNN1RIaHoraGdYUERjeGJJeGx3clNMK251TFdJNmUKcmZrSDBpdzljV0ozN3A4YTk5dFplZzNNSE1LeXp1MkFHL1ZvdlVGekdCaFZPNVFPbFpWUm9TTWd6Mk5oVFMyRAp5VXJYSFpVUkpid05LY0hoSXJ3bUJOekNMUkZUTDZNTVZKaXdrNHRwNG9PaEtnb05HTUxvbm9peXR1ODZQeEw3CllaRzVzRkpDVEtudjE1M0ZyM1drUm11cVI3OHhqQmFvaVN1QkZZckNLa1l0OElrcGt5cFJsUWNFREhjQ0F3RUEKQVFLQ0FnQXp1NS9RK2VlZ3Z1YzlOOHlQQ1hKVmJNYkI4dUpCNnQxdTEvVHdMUDFCMzRZNytoVVhJc3p6NEpHVgpDY0RQNnNPR0pJckxESks3cXllbG9mdzhtOElEVjg0WitmcFU0NTg5ZHZRL3dQb3NpRUQyRUhGZ0k0bFEzb3QyClBsR0NDOUxoRzZFcjB1TFloaVgraVBTZExTbG1sdTNlZUlpRy9EK2pFMHBQOTdXTXR0Rmc3eUFsL1ltVVJDSysKbVgzQUQySEw4SkU5NGlmeEQwaUVhTmpUYW9RczhpSnppaXBuUzdKT0N4eGNsRXU5aWpHY2U4WUhmZzJIeDZwZApKMEkyZktJK2QraklJUjRYYk42QSszaC9uSU1OZ0J0QVA1Qk8rT1FqNEhSM3hKZjQ4VmZ1N3BiY2tmOFpiVzRXCkdmRkc5Wis4KzB3bG83RzIydFN6aUdFSmREVCsvY0NTRVBLVDdSK0FadncwOTh6aU5oa3NvYlJ5RVVXMUV3VEYKaFlTbHByeDdwdldYeHRnYmpLV2ROU0c1Q3NTMng4ektybkxkTWZ5cTRPNHJFRTFaMjhJRnY2eXhEcitLTTNTcwpJQ2l6SENVdHlTYnVWeFY1QlVCZWp4U1IzMXNjT1YvNVJjOWlIVFFodFNUN2RrWVJWOThKcDlGREw2eXZDbjBaCnBCUWxndWRZZ284QW1OcU8xWFRxeEFXRUhGQ1hXN29KWlJHM3Fxb2Z0K0JMM1JtM240L1g0QnVGR2VLOWNhOHUKQ1IzRzNEVkJQWk0xV1IwTVlIcEVyaUNwTGZIdXFVNnhwUndlRDBBOWhVaWlieVp6dlpCM3BUNVhoQmhvZXl6cwpBK3MwQUs0aFp2eHNjZVV1K29SSTZ3QzRJNlBvNUdkeXFuUHlLL2xIWFVkRUlvQWo0UUtDQVFFQTRFNUdHY25vCnZBZ0tnSU5EWC9TcUU2M2kxL0QwN1F1UCtodFAwb2NpM3ZBdjVEOVdPVUoyYlZtSmE5ZklTamFHQ2ZOYXRkaHMKRlFzWnIyclpRUXcrZENCRTN2bVh3eUdiZkNYZ2ZNVytIRlR4Q2U2andjR1l4bVNEWnNINTRWdkNtZmV1RXl3dQo5dTBxT0gxbmowRy9JeTBMNnI5cVc3VEJIcUc2Z0JmaEdPNk9aS3ViWGlWSkh1K0pudjFVSHpFMllTd29aQzNRCkJsc3ZpdCtpcm9LOEhaNktRVVR0cWJaWXpSTW0renhhLzhUWkRUMVJvaFMxdE1LSDZmTU5tWHNSUzNJQ1NsRGsKRXZyZ3FGblhXUXFDTlFUT3pWcTlzekJIeE1OSHRQaEttdnN4VWpSaWpGVlV0YUhJL1RLYURUVjlkL1Uwb2xragpISG9hNjh3YVlwT0dFUUtDQVFFQThKQ1JBcHQrWW11SDRpTzB3MmFPeWMxSFU0cW80SEZ1bWdEQmMzQlJiTUtVCjZGeG1wblRjc0xOTzNoQmIvZm1tRnZTRURyS3d0NDcybC8xTTFuYjlQRDNCR3lXNTVzelBhS3oxOFA1dHBIME0KbERDTitpd0x3cUVMclRRbjcwdlJhczhVTE9Nb3JoQTduM3FvT0ZrbWs1VnNEejB5Y1ZvblROcWdTQS81Q2tZawpBcFZ2NnJvelp4allOUTY5TFJhU04vOHI4U2YzS0dMb2Q4akEweGtuWXB1cWhuVy9PdE4yUzU1eGQ0OVE0aGxGCnpYV2g5TERwZjdJejBnaG03ZmlHN05vbGhkclFpUHF2RURuanVkcExLdnQ0bmNSNE9OL0JwMjZUWHZIS2FpQzgKdTJhS2VHRjEvcE5pUi96QVpwa3dkWGlUSC9wYVcyMElna2VEZnJ0Q0J3S0NBUUIyd05vYVF5eUZpRmhQQzYrNgorS1Ntd0pQdHNiTnFZSW04WjROT09aOTdtbnd3Z2x2YSt0WUtOTEl0dDFOaC94WGQ1TW9zcGtVcXF2TFJUV2R5CktkSlMxdGEvbWpMLzZ5WVBoMW9mbE8xK3dIWFF4VmhMZDN5ejVIa3hDUmVMZVhKQTQ4RjBneHJtUGsveEVtdW0KaTY5dkp5VTlCbFIvOHVXZm13NUxUTmt1d3ZYK1ZHQndhcHNZMXNic3RzQTN0MjFMNnY0RGM4SEQ2N2p5OUUyRAp5TkZoZVJOSFZQL2lyeGk2a2g0OE93c09pS0JGZ3laYUFrN2xRV3lGcnRtUFhYbWRrT0duaU1ZSFNtMXdsQWdRCkt5RWVnc29lTEtGc1llNU5QUG9VMUxOaTlBUjd1aUpHbTlLNlNzcEhTdWdHZ0VCS0p6YlRrUSttdnZyTHhnWmUKRkM2UkFvSUJBQXh4amU2eW1HRUM2dTU1cGxvTkxnbW1RckJCbGVhMk4yQmo5WjNCQzVVeW8zMDVlbDNWNGF5SwpPZVFtdUh0MHRIQ3ZpVDB4WlE2NXFHdklRSGMvaEczZlMrUFptYm9ra2YzNkpHYW80b2NGcU9icGRBNml4S0QyCnI2SHY5cmpjRlNNUFB4M3JTaWxtMFk2NFM0ZE9wVDR4Rm52YlVJYW9nU3ZxaXl2dkY1UytlQkppSkgzaHo5TGYKYUIrbWVZYWhpa0szUWxDaEhwbktNL2d1UERzdksraGY0UHcvanZxK0FYcDc0YWFybFNWODVTMXhqa1VYK1p3UApYYnJaa0dseTE1ZmMyT0FKcDR2T1c4dmRFcmlFWUNzREF3UTJLM25WcVRDOStZV0p3RXlwRU5vb3ZiVG9aYkFiCmM1UUJzUG9kcG5JTklKOGcxaGV3bGlZWENPZy9TM1VDZ2dFQWR5bFdzOXRaV2lSYXlKZkw4cll4dDlWU3RpZ04KSjBXRGkzVTlOL2VwRHVHelA2UXNNUkgvcmVrNFNKZWx3RXpRVFdsWEdmeStwZlRqNS9GZWxsQ2VIb2JBdzBtUwpWdm85K000QTR2amt4YWR4VDZRMmFZOVRTTVVaZHhIL0plM0tOQkVCRk5LY21SVmlRWG4zK2huSkR4MkJtcGhPCkNsZEJjYUV3Nm5FTFhCMDk4T3hZb281STZEcXFielptSklzNGdQRmFWelJ3NXVmaXgwN0NMMTFSTE9xLzY0VlUKOCs5a2xSVUQyczdMaWhDNHlUQ2NGWHVnN2NGdTlaTXFzTVM4dnEwQmprb2ZvMkh2UXd3cDlodGhwV1I4U1N5bwpDYlY3UzRsYVZyamErODBBUldwQllkRHVGRFBTeHpaOTNlUlc1UXEzdkxPNHNPRnFOR0k4UlhRY1ZnPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
    "kubeDNSServiceIP": "[parameters('kubeDNSServiceIP')]",
    "kubeServiceCidr": "[parameters('kubeServiceCidr')]",
    "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', variables('fqdnEndpointSuffix'))]",
    "kubernetesACIConnectorCPULimit": "[parameters('kubernetesACIConnectorCPULimit')]",
    "kubernetesACIConnectorCPURequests": "[parameters('kubernetesACIConnectorCPURequests')]",
    "kubernetesACIConnectorClientId": "[parameters('kubernetesACIConnectorClientId')]",
    "kubernetesACIConnectorClientKey": "[parameters('kubernetesACIConnectorClientKey')]",
    "kubernetesACIConnectorMemoryLimit": "[parameters('kubernetesACIConnectorMemoryLimit')]",
    "kubernetesACIConnectorMemoryRequests": "[parameters('kubernetesACIConnectorMemoryRequests')]",
    "kubernetesACIConnectorNodeName": "[parameters('kubernetesACIConnectorNodeName')]",
    "kubernetesACIConnectorOS": "[parameters('kubernetesACIConnectorOS')]",
    "kubernetesACIConnectorRegion": "[parameters('kubernetesACIConnectorRegion')]",
    "kubernetesACIConnectorResourceGroup": "[parameters('kubernetesACIConnectorResourceGroup')]",
    "kubernetesACIConnectorSpec": "[parameters('kubernetesACIConnectorSpec')]",
    "kubernetesACIConnectorSubscriptionId": "[parameters('kubernetesACIConnectorSubscriptionId')]",
    "kubernetesACIConnectorTaint": "[parameters('kubernetesACIConnectorTaint')]",
    "kubernetesACIConnectorTenantId": "[parameters('kubernetesACIConnectorTenantId')]",
    "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
    "kubernetesAddonManagerSpec": "k8s-gcrio.azureedge.net/kube-addon-manager-amd64:v8.6",
    "kubernetesAddonResizerSpec": "k8s-gcrio.azureedge.net/addon-resizer:1.7",
    "kubernetesCcmImageSpec": "[parameters('kubernetesCcmImageSpec')]",
    "kubernetesDNSMasqSpec": "k8s-gcrio.azureedge.net/k8s-dns-dnsmasq-nanny-amd64:1.14.8",
    "kubernetesDashboardCPULimit": "[parameters('kubernetesDashboardCPULimit')]",
    "kubernetesDashboardCPURequests": "[parameters('kubernetesDashboardCPURequests')]",
    "kubernetesDashboardMemoryLimit": "[parameters('kubernetesDashboardMemoryLimit')]",
    "kubernetesDashboardMemoryRequests": "[parameters('kubernetesDashboardMemoryRequests')]",
    "kubernetesDashboardSpec": "k8s-gcrio.azureedge.net/kubernetes-dashboard-amd64:v1.8.3",
    "kubernetesExecHealthzSpec": "k8s-gcrio.azureedge.net/exechealthz-amd64:1.2",
    "kubernetesHeapsterSpec": "k8s-gcrio.azureedge.net/heapster-amd64:v1.5.1",
    "kubernetesHyperkubeSpec": "k8s-gcrio.azureedge.net/hyperkube-amd64:v1.8.11",
    "kubernetesKubeDNSSpec": "k8s-gcrio.azureedge.net/k8s-dns-kube-dns-amd64:1.14.8",
    "kubernetesKubeletClusterDomain": "cluster.local",
    "kubernetesMetricsServerSpec": "k8s-gcrio.azureedge.net/metrics-server-amd64:v0.2.1",
    "kubernetesNonMasqueradeCidr": "[parameters('kubernetesNonMasqueradeCidr')]",
    "kubernetesPodInfraContainerSpec": "[parameters('kubernetesPodInfraContainerSpec')]",
    "kubernetesReschedulerCPULimit": "[parameters('kubernetesReschedulerCPULimit')]",
    "kubernetesReschedulerCPURequests": "[parameters('kubernetesReschedulerCPURequests')]",
    "kubernetesReschedulerMemoryLimit": "[parameters('kubernetesReschedulerMemoryLimit')]",
    "kubernetesReschedulerMemoryRequests": "[parameters('kubernetesReschedulerMemoryRequests')]",
    "kubernetesReschedulerSpec": "[parameters('kubernetesReschedulerSpec')]",
    "kubernetesTillerCPULimit": "50m",
    "kubernetesTillerCPURequests": "50m",
    "kubernetesTillerMaxHistory": "0",
    "kubernetesTillerMemoryLimit": "150Mi",
    "kubernetesTillerMemoryRequests": "150Mi",
    "kubernetesTillerSpec": "[parameters('kubernetesTillerSpec')]",
    "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
    "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
    "locations": [
      "[resourceGroup().location]",
      "[parameters('location')]"
    ],
    "masterAvailabilitySet": "[concat('master-availabilityset-', variables('nameSuffix'))]",
    "masterCount": 1,
    "masterEtcdClientPort": 2379,
    "masterEtcdClientURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
    ],
    "masterEtcdClusterStates": [
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
      "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
    ],
    "masterEtcdPeerURLs": [
      "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
      "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
    ],
    "masterEtcdServerPort": 2380,
    "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
    "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
    "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
    "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
    "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterOffset": "[parameters('masterOffset')]",
    "masterPrivateIp": "[parameters('firstConsecutiveStaticIP')]",
    "masterPrivateIpAddrs": [
      "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
      "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
    ],
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', variables('nameSuffix'))]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterVMNames": [
      "[concat(variables('masterVMNamePrefix'), '0')]",
      "[concat(variables('masterVMNamePrefix'), '1')]",
      "[concat(variables('masterVMNamePrefix'), '2')]",
      "[concat(variables('masterVMNamePrefix'), '3')]",
      "[concat(variables('masterVMNamePrefix'), '4')]"
    ],
    "masterVMSize": "[parameters('masterVMSize')]",
    "maxPods": "[parameters('maxPods')]",
    "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
    "maxVMsPerPool": 100,
    "maxVMsPerStorageAccount": 20,
    "mountetcdScript": "H4sIAAAAAAAA/3RSUW8TPRB896+YL8nb14uTgioVKUWVACmCNhWEJ4Qqn713Z+LYx3ndpgX+O/IlTQ8J7uXkHe/M7HjH/8nSelmq2IgxrkLybH0NG2GCJzTUEayPTMogVCDWBiVplSLlc5lqNMxtfCVlmeo4dSp53bTKTD2x1C4kU1hvWf5fplrOz85PZ+cvxBgrrwncUM9gIyq7I3OCjlqnnhBy4R73lpv+2HMhc0E3ytcUn27n6tFFbblJ5VSHrbx8TB1JpWNBvraeZJuck2dn86mIxCh24s3y0/uFNHQno9Hi5vLjerlerq4Xkx8Z+TUXV6vP1+ub1fJ6vZB3qpPOljJnYGzciGToTpktIjE7EtuNsR2KFpPnLrHNieIn6o7+BGyFL5i8RkHfMcNXwQ15AQCkm4BRFsi5KNeRMg/oeciM9ld2ljETlRVjVNY5ZE+yiqxK0QuNnmaaj4bYUdPT3zQnxwCw/wZ+DxWVOOS/oUolx/HEh0pZd0Bnh//pCBcXQ+HeqW5Ib2ArtKpjyzb4PEjkKFzEs/a/XY4HnSZQhA+8p+hhGfMmx7qPrig83WOOSX7IAbzdVHFKO345UETxoV/s233nOxRv4dTjw61lVTq6zTu3mJ/0pW8hdV65Qy0Ptn/hQVS/AwAA//8o5bmvUwMAAA==",
    "nameSuffix": "[parameters('nameSuffix')]",
    "networkPolicy": "[parameters('networkPolicy')]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
    "orchestratorName": "[parameters('orchestratorName')]",
    "orchestratorNameVersionTag": "Kubernetes:1.8.11",
    "osImageName": "[parameters('osImageName')]",
    "osImageOffer": "[parameters('osImageOffer')]",
    "osImagePublisher": "[parameters('osImagePublisher')]",
    "osImageResourceGroup": "[parameters('osImageResourceGroup')]",
    "osImageSKU": "[parameters('osImageSKU')]",
    "osImageVersion": "[parameters('osImageVersion')]",
    "primaryAvailabilitySetName": "[concat('agentpool1-availabilitySet-',variables('nameSuffix'))]",
    "provisionScript": "H4sIAAAAAAAA/9x87X/iNvL46/ivmDp89uG6xpDsQ5see8cS75YmgRRI7nrdHhW2AB1GciU5Cc3mf/99JPkJsAlp++L3+d6L3saaGc2MRjOj0YjDr9wJoe4EibllHcJoTgQIn5NIAo+pAEYB32C+grN4gjnFEgu4vrAOwbsjEnwWYAEcRxwLTCXIOYYpC0N2S+jsxDqEL4BTOKDxcoI5fIElRpTQGXzRAEcN+AIjssQslnCLiFRDU8YhYP4CcyBUSBSGIBlMCSVinuAdwxcYYn5DfAw+i8MAKJMwwYApmoQ4gMkKxEpIvPRlmOC8rsIREnFZjvOmgj0/ZHHgEEq0pvxloDj02TIKscQJ7tsKXARTEqZATaUAT/oBBEgiCAjXXE1ZTIMUpFlBCCs0yZQIyPexEGSS0T2uUuziGwF+GAuJeYI7xyiU89UXyxJYgnNnCRZzH4PLIumi32OOXZ9RiQjFXLgRZzdEEEbHBqyubKc/bNVe+EiCi6Xv/s3hOMRIYPgCM44j+G/3tAVfQHJwAnjePW3Zz+ELoNsFPL+POFG2w+IowvxFrfHy4flL6+rDVW90Ne4Px732hdeyzd+2NfjeO8+/qr9sq9MfeP1h/tX8bVtnVx+8zui85caCuyHzUaiNfRFPsC9D67TfOfMGZlR9NwZndPD1neWNOqfjS88bjDveYNSqvcD+nEHtfv1792O30x55wwf4An4swQme//wcnCkc5R9+0R+a+YdX+kPtxYva/UV7OPIG427v1Pv3w9fNly9fFiY+834qm/dy0L1ujzw1/FfOm6y9Rabw889Q6w+h1YLaunLhl1++U9ucWgAAmjO7M0d0powrwFMUhxISBcOEUFBql4RRWyNkK6IMK12HKbEsTEXM8SCmHbZcIhp0ko0UvHhp3RfmKtpxvu2MYzBTKIjxlPGx3mLfNhrQrLBjg19P96zGVrLDV0pLe+FAURs5l0/2F3ZOQPnLN/rPKbEeUs2catvsGl+4j3KqvGeZko7f7tCSIZTQeZqyylGfoLPdQmTqOmoU9aWo/RogiX999eucCUnREv/6yrh4E9rev9f8Lo2pa/5vEFdr63I8YUw6HP8WE46DNV4H3od+fzTwfrzqDrzTluQxtnAocNngFKkBZdlmN30Fzu9gZ9uu1z/1HuyyzYTvsB9rBSyR9tBUxc7M5QKLMNcbStiWRosF5igIwLkCW4UDO/u6ZAE4Edi1F3OMAnB8OD4CN8A3bswRDdgSvsAECfz29Uu7iBshIW4DcOLiRxKkf+XMlmh5gmeEfsJSSaBiWgdzKTJ9K8z2ZXfoDa7X3dj4sj36vmXr2LHIMg3XV9guiojA/Abz+gKvDDeSxf5c6bOa2oOB9OdKDQ1l4fuBs1sKnDF5ov7zKI5G6rT3lsVHJUKU4Jdyvwtui+1yYA2tI8kTF0GtfeUq7CJYKsleCEokNe2JznIex8pl65x3vd7oSbL5IcFUVslWQbBatscQtpbrEaxcts0M4FHJIoz5RryvErOUdrWQu8HLl68KZ8swC8nVvobpc7nDMDcJbsj1+vXeCOWLV421ZZhPkS0xzArZKghWy/YYwk7D3CnbZkr8hwyzQsxS2tVC7gYvF7EKRyMlR4I8TFeEhQc7i6ngOAHWB9/3e0WelO66364mWB0MUkoV7rKa5B5eeY32trt6hPZur7hGOz3/PEJxlwsq00NhgffTQ4UVlelhf9q7N+G2HhTgPoqoIJge7HYlbpgGO9O25SIgXKWTpak+PHuW7Njyk4De9HWOUbDKU2Yjp1iQKNon330Fck4EEAGIApphKjWsrbNsdbA89/YP+cVwn7maKiIPtrUe/XYCbrmXHdBWwS1cfTjvdp6QDGtXWZYIrxMqMG885G7IXenvFrjV/s/VwBv/MOz3KpjWllD/n2C0yOs61pZ6y8a3+doCSgs36f4p0Xv1JtqxSCUeP9PEXg5/W81Iwt//Dl7/YwK7JYs51tu6aGCf2LX7UXvwyRuNvd51d9DvXXi90YP9ygBJTBGV3cA+UbRGXq/dG427p9m4iCfm3EsYTaGGVx+GnUH3ctTt94qwCAUdvTUyQG9w3e14Si+9TveyfZ46rzKkIfY5lo8gDr3OwMu559hUET9xFkcGdeAN+1eDjjf+NOhfXWaQWSlJA533O23FfVFMimUPLXEmYq8wj8B+zIlc6XlyqJ43+ld/cKa4uhp0Rz9tzHmzRvK6Oxhdtc/HCdIa1GBbjg3wcYVcnMUSj9AkxPlMg/7VyBuP2h/OvQwu4mSJ+Kp9g0iIJiQkcjUscnc56F60Bz+N29ft7nn7Q/dciTMsqEBb06VyrQHmH5C/YNOpfQK1+855/+r0ctC/7p56g/GHdues//Hjww6sAZacYFGNPB54o0HXG+4i4t1FjGIqd1Dx/n3Z7ylb30HmNOapWVSROb0aGFvZQeYHIiXmO4j80B2NvEEpiQGSOCRLUibKoD3yzrsX3XIZFOa5wvzxcrgLefzjZbkuMwIfYn+BdzIw/nDVOfMyPmKBLxBFMxx0A0wlkSvvTmIqUlVeDb3xRbvX/uSdjrunXm+kzMn798jrDQuqjAXWVUnq4wssUYAkyrC7veGo3et44wtv1D5tj9oPmSUb5q9RHBYM+OxiOM7Yvm5fnY90zbmwAQzaGV6lSItvRMnoNeaJGLZtPVhe/2N2s2FNY+orcwFTWP1IQhwhOX/xEu7TomZtvZi3Ua7kWMacphXH7WqqKabWmhsl0lrzCYXPWnOjxPm2OJ/1UBBDYHkWT3CIZT+SArQcBwIH4BCwxeF/08DWvxwNW/W/Ha79XbtvPhza5s4mqd7r6B1iuTaJz+iUzNoqmHd63UxXnV533On3PnY/jU+7g5Ym41PiUizrwXraWFuHLRzFnEEhsJeDqeTg3Zs3paPq04duzzCgkk/FwITQkukTMFOG1CFXfR19+s94dHHZcuUyMvnK2KekLme/W8ly85W/DMYzLMcS8QkKQ3irl3iLBtTur3veSH+6PL/61O0Nx1eD8wdzokUcnLvfp2V4Tmebw06/N2p3e94gCR/d3qdtfrMcm2J5y/iC0Nm+3D9CX/mR3WI8RmBDKKi7IWPRBPkLqLsR43KJop12UNSGMQJnkNtBcXR5s/bNbTYck3kqww2J2DIst0BUbdjN4S0CGt4VE0JdPJEqWAtwJFAkwXE0wPZ+UfuSYrm2Xf6Aqf7fNoQJJ8EMQ91Vh1FH39L+BUaxvRg9o5dLFhJ/VfT2P/9czAMv++fdjkrrW2BrC9i4pdHTrnlDc5YNd1KijGpCUEopsZPCJVbGe3L11Qkx4p3sPD2IqSRLbHz9IbSDADQE5CDAccQEkYyvYIFX1oEJNu0gUDHmEeh6vW5bB37MQ3DE8BwcR5sPvEn/5QQ4RCtoNrIPS3TnKJ7guAH2XMpInLhuwG5pyFBQZ5GKtgLXGZ+52VwEC3fOlvjEV+zk5QLzt5N/cI7du6tJTGU8br6tN167A9NdoM/v8AVQJJ0FXoG+B7MqVFKQcX9tGE1o6OcBnoCS7AmCuZuSuY+KBu5zeG8iMoqkaw4Voq5cTD1wfd/hZvH1Fy1rcitcIoaBTKVN4MolTohqcZU6Z1hCHAVIYnj2DNIv6U2s41DmJH84HPtsucQ0EOCs4LN1cJBzucagnOOkvSYAkbThIBqAYCp11T0xom4daB+g12Acc9LKrImj2/qMyHk8iQXWStWFcbbc1LIbcXa3co/rjfrR8Z8y5Np9ysaDUr2mW09YrxOqbE+lWs/F4T9DMsF32A8I/+ehaTgxHw6z5UxET/5/i95fz6dW6yabSrlCIokNpzeI78GhpqTX0tPdVWbZJOJy25Q0CmRCGdvTaMryMsRSM1zDNcaY9WOZmds0GOp5U+Ysle2upcA2OPkGSw2xxfGSSazUZz7oO34spFYii2Wr+WZZhuhgGkSMUNmKKbk7cV3dJ5CBBYV/aj3Zpf47gzE+uzPQ2YaJmqfja2+gzlQtu1lv1hsO9+sNO90HBbDT/r965/32qYrB+bYQknE0w/UZY7MQo4gIsyc4yYUJ0n6szc+1+3JWHuohofGdg5bB29d1iXh99nt6250Dl2cgQQL/SN5h17Yp2etfiwLb1kGWcZSjOh1wrQO+VKetUggrtcZhrJvlpnEYrtIlwgGs6yYxPyzjKF++7zbPXsVBs7ZJU5SO7DFXZl5C1zrI8j1TM83H7S3zMHlpaxPQNdlDXbJlmAYpW8QTjlGEObRAN6HYusRYSjFDYmw5Fj7jGFrQsOH94xg/R2E8I1TUfU7qBdliKnksJA7GKtlSIXKc7KNf9qKbAI/lKlLMPCesSD2NUjdNY57Pn0QT0xmhmmrW8pcHqv1IVYmdnJ3/v5XVND/q0wuPqf8IrYetKsmmjafJboY8Hlz1Rt0Lz4ZWC+zNJKeQQx8cHMIFWmBQZOEWg48oUCwk3BAuYxSS33U1zzpQk+jeUec3uFnegYrqvutHMaFTllErC0nr+y0PRetzp7dJAaMY0FTfPWVnJ0gWGhDHuYdQJHbFs/KJjSM5qI5kGYZ1cDAl1sHGGaACLzvDZC6WTMdTREIlXFN52ONCM3OA8JJRFQYYMqWZfMx0TKclq/w7EU7aTJ2MJX+2av8whxXGgQChcN+s179tNB6+g4Blhxtd+6qlFByKobFVAtvFyPb4NkNZkWydMXMkS+4Z18tttSZIxhZQIyCwz1TWapqgy/rG7TUCyrMusi9JMU5zGGIcgeFImZNVKb45OW8XAWvNx5vYN0qCx8WSYAY05thsgqYuQzYbqab2shKVGMYCak2T4Udohjk4ocoPb5ByI7PkbrfWdAxsPWSzbbNRE+SLZDTxD3Dwb0/RQdKUvyH267JjcrFJNtsXVfst6fN+2EQ/uxjuwO3Msb+AxVLo8UNgNFwl/oZMAYHpHFUORbGfNpCm8n/1SFE51166fulMpZIm6e6jopbVcvGd5MiX368izNX4i5e73IiykLeNtBM3isMQat//dOkNzq4+eCov2zn/PJ3ESWYtkeUHFnOKwpSNKlLJ2cT5nwEPCi0EQ5MBtyLMBRHqVKjj29qRJkXTBb0irh6/QHdXArean/ZHTGowfwDzI+O3iAcjNlyJkM1alD2GW2IA34g/c2Ox+EZ8b958tMwWpSzAou1LcoOLXwYYBSlI6S1H0tC/HQ3ebkaDFBSO3useZKpMKXmG4qiQvuZqtcuwa//Q1bOGnTiN9H9bISRXbvFxCxHpy5ZXmz7f3kIvqKSxNbju+WFv758TfSwAbPCtfEjCe5KblPFu4kCjuLLGPC5ZMEzuu03Bs8SEPOkHmQ1h6QddMYgpJXSWLPju9TTFCsdHPubJq5+ybmefSwVVDbPe4wiOLuTt06cLTl4DeduA9DjcPHpXb9Qb9ebJ0fG7b92bI3eJ/DmhWHy3kZmsB6RSu1pXS6MkndAPt/Q5EEThVPmIwf2hTKLIy2PmpNlSRlR4FvaIHTWb1fFGkTtFEp2SPLwuWUxl+r5Lb2kR+M3sg84XyEQvWkDEIpdka1tX8U90XVKLe0vkPH8fh+TJ9gR2mb9bSwIN6S1EuEWi8OQOyVyaOoz4Ss0vWSIvCkMIsErrRT2fUUArebRTsnHW940Gj4OUnoPg2bOn6vK7P+srX7wACS2o3ZMH+BvU7sUDvHxZ4VG39aW5xYFZhpTZ1OJltYstrEuJ6efmXxPZx2wPTImuPhWsI7OGzeWrsg1j5Y0S895yl2ky8gdC62X/NG8mMndA44/dc2+7N26JKJliIYUbscBJ+5OcSHNQX6FlkvGnj5RqVaS3TlVZrPU5RhLvRC7b9LecSJ1jmipWtuU1WV0k0FeYc7bEbq19etHtXQ29gVtXwm0AatFra4hJ3Wrj1nMNxLgF3S9YW6dVuBvMZz7J/1lGaE/wAnndcNBolBPL7ow3UJODQUCEPsWGbKZfRRq3K3RrHLBYRrG56dvqKbccx7FQRJLulRO4aVpJSiBOLCdND04MG5hLMiU+kthBsZwzbTtqT5zAZ7vWaRebgT+nfcD8BvOTIuNJm7MFQNESa9SkIf/jj6e9z7alr1nupGHA/DthIOFmGwWS92ebQw4KloRqgKrJYs4xlU460TbEgtDgBIxZWmoSzVgZucJsmpmEaaLpF5SXqayglG3VJYgLvCpFOPN++mxbNrwvtadD4Ello8wmRGYNzp3ahX+itnYI3am+ZfPzS09zTFGxtAT1FgPFWD9FNZ5QYSs6PKbgm6e4CjV9uxnAeIKnjOOxQk1Ov/m1YnrJF+AI0wBTn2ChqJn3r+uT65BaKMZhjtPEF0EQLWYQMn9Rtw4qnwYnNc+SZnYFvMwBs0b2/D1m+rp5/Zn5mipz5m6RrsCanvOAYUGfS8gvSAMV6pXYSxIEIQY2zdIWmf+egnVQdsA+asAbeKPvV5eIL2DOwmBtPvM6ukJOr1D20KfkTNJdr4bXBitpl3RNrE9RAvDnbNdIs7MmvFdJuEqinb0U67IdHOwE3mOSrKZbRbhQ9J0StcrVLzPWK/BlC12gVklmo+yzQWZjdOez5WfPsgFTpPGoz1e6v/xfRM69O4k5ReHZUpS+ca6U8exiuM4VZAfas4vh4zpKqmJlCkqGHiGQlKLKCCRD+xE4ZRRv4Jf5r6e6r/3fkm8kcAVFpv2u66WbzTHz0xiFocIBcONrcZG+EU9wsSYyLokkM727dZSYxLPsJD+JZ6Ieopj68wgFdYqlG+tOGfdr0xXjajfpfj2JZ27z7bu3b4/f5FZ2FARNHzffOY1332LndePYdybHb44c1Pz2qInxUeMdxvAeXLES7iQW7s1S/Tfg5AZz4c5vxrEkoRvTCaHJfUnSU9s8Jp//8hk+06QLl/t10wNXWZPdDBkx3RE00qaf/JdpilUKW69V1QnnUJf8oAlLQmOJVcBOi9OUBfgVCAZyjszP/vixkGyZ/nYQTjvJtSsv/GiE6aRKauVpkfxVUjxXEVM//yI0m/W5BZD9RBE4PthiHstA9wZyaMIze2eExDTY/M2HP/eSLXuZlv8URiQAxXfT21u12DlSBulE+pYEnln/LwAA///VJYvXbkkAAA==",
    "provisionScriptParametersCommon": "[concat('TENANT_ID=',variables('tenantID'),' HYPERKUBE_URL=',variables('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',variables('apiserverCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',variables('clientPrivateKey'),' TARGET_ENVIRONMENT=',variables('targetEnvironment'),' NETWORK_POLICY=',variables('networkPolicy'),' FQDNSuffix=',variables('fqdnEndpointSuffix'),' VNET_CNI_PLUGINS_URL=',variables('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',variables('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',variables('cloudProviderBackoff'),' CLOUDPROVIDER_BACKOFF_RETRIES=',variables('cloudProviderBackoffRetries'),' CLOUDPROVIDER_BACKOFF_EXPONENT=',variables('cloudProviderBackoffExponent'),' CLOUDPROVIDER_BACKOFF_DURATION=',variables('cloudProviderBackoffDuration'),' CLOUDPROVIDER_BACKOFF_JITTER=',variables('cloudProviderBackoffJitter'),' CLOUDPROVIDER_RATELIMIT=',variables('cloudProviderRatelimit'),' CLOUDPROVIDER_RATELIMIT_QPS=',variables('cloudProviderRatelimitQPS'),' CLOUDPROVIDER_RATELIMIT_BUCKET=',variables('cloudProviderRatelimitBucket'),' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' CONTAINER_RUNTIME=',variables('containerRuntime'),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
    "provisionScriptParametersMaster": "[concat('MASTER_NODE=true APISERVER_PRIVATE_KEY=',variables('apiServerPrivateKey'),' CA_CERTIFICATE=',variables('caCertificate'),' CA_PRIVATE_KEY=',variables('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',variables('kubeConfigCertificate'),' KUBECONFIG_KEY=',variables('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',variables('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',variables('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',variables('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',variables('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ADMINUSER=',variables('username'))]",
    "provisionSource": "H4sIAAAAAAAA/8xTTXPTMBC951c8gibTMmMaF05oAr30xo0DhzTjUexVrEGWXGkNLU3+O2M7yaQhuOHW29qrfR+rp7dvrpbGXcVyNArE4TGviszoTCtjm0AXl3hC+99QnIlU4pcyPBPXEmwq8g3PxAeJWBrNmEyOCgntAwyMg7iIdI8UYot1KVH4HQbEvni62UjMIb4goXtMgUWLtgykfmC9RrRENUQrogVwJEF56XH7QHnDVOBuLG7uxhCmw44Sm1OuMuezyIrj67d3oH9FnLEKS2XtgO7+QKe7CXYmPr4sUwUk/FtDbIeHJA5tc4+LFOkUeRMsEh2/fYXoSn/AcNJq+5VpHzJt7ED02m6tuOxMvmDOaMyRaIjdEBYSXJLrLbVgJ8RgM1I1dxtv6kJxL+YvqnQ67VlUzcmKGP1hXH+epFhjFahG8oDx/Pvt4tP7d+PdYh396+7T07E+wj+Md3yMTFXONgsUWQU+J9OIP3OnKjorHscp3jOiUFR5lwSyXhXdu9i3tmIgtkzPu88G//dF/AkAAP//Ky0c8bIEAAA=",
    "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "registerWithTaints": "node-role.kubernetes.io/master=true:NoSchedule",
    "resourceGroup": "[resourceGroup().name]",
    "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
    "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
    "scope": "[resourceGroup().id]",
    "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
    "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
    "singleQuote": "'",
    "sshKeyPath": "[concat('/home/',variables('username'),'/.ssh/authorized_keys')]",
    "sshNatPorts": [
      22,
      2201,
      2202,
      2203,
      2204
    ],
    "sshPublicKeyData": "[parameters('sshRSAPublicKey')]",
    "storageAccountBaseName": "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]",
    "storageAccountPrefixes": [
      "0",
      "6",
      "c",
      "i",
      "o",
      "u",
      "1",
      "7",
      "d",
      "j",
      "p",
      "v",
      "2",
      "8",
      "e",
      "k",
      "q",
      "w",
      "3",
      "9",
      "f",
      "l",
      "r",
      "x",
      "4",
      "a",
      "g",
      "m",
      "s",
      "y",
      "5",
      "b",
      "h",
      "n",
      "t",
      "z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "subnet": "[parameters('masterSubnet')]",
    "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
    "subscriptionId": "[subscription().subscriptionId]",
    "targetEnvironment": "[parameters('targetEnvironment')]",
    "tenantId": "[subscription().tenantId]",
    "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
    "useInstanceMetadata": "true",
    "useManagedIdentityExtension": "false",
    "username": "[parameters('linuxAdminUsername')]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "virtualNetworkResourceGroupName": "''",
    "vmSizesMap": {
      "Standard_A0": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A10": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A1_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A2m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A4m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A7": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A8m_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_A9": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_B1ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B1s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B2ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B4ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_B8ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D11_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D12_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D13_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D14_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D15_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D16_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D1_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D2s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D32_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D3_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D3_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D4s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D5_v2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D5_v2_Promo": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D64_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D64s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_D8_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_D8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS11_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS12_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13-2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13-4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS13_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14-4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14-8_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS14_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS15_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS1_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS2_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS3_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS4_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_DS5_v2_Promo": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E16_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E2_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E2s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32-16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32-8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E32_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E4_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E4s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64-16s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64-32s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E64_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E64s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_E8_v3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_E8s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F16s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F1s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F2s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F2s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F32s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F4s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F64s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F72s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_F8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_F8s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_G1": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G2": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G3": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G4": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_G5": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_GS1": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4-4": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS4-8": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5-16": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_GS5-8": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_H16": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16mr": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H16r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_H8m": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_L16s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L32s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L4s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_L8s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128-32ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128-64ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M128s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64-16ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64-32ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64ms": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_M64s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC12s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC12s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24r": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC24rs_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24rs_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC24s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC6": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NC6s_v2": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NC6s_v3": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND12s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND24rs": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND24s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_ND6s": {
        "storageAccountType": "Premium_LRS"
      },
      "Standard_NV12": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV24": {
        "storageAccountType": "Standard_LRS"
      },
      "Standard_NV6": {
        "storageAccountType": "Standard_LRS"
      }
    },
    "vmsPerStorageAccount": 20,
    "vnetCidr": "[parameters('vnetCidr')]",
    "vnetCniLinuxPluginsURL": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.2.tgz",
    "vnetCniWindowsPluginsURL": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.2.zip",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "vnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "loop"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "primary": true,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('agentpool1VnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
        "count": "[variables('agentpool1StorageAccountsCount')]",
        "name": "loop"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
      "properties": {
        "accountType": "[variables('vmSizesMap')[variables('agentpool1VMSize')].storageAccountType]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('agentpool1AvailabilitySet')]",
      "properties": {},
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('agentpool1AvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpool1AvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('agentpool1VMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('username')]",
          "computername": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpool1,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates nfs-common iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpcbind\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshRSAPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('agentpool1osImageOffer')]",
            "publisher": "[variables('agentpool1osImagePublisher')]",
            "sku": "[variables('agentpool1osImageSKU')]",
            "version": "[variables('agentpool1osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'-osdisk')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')), '-osdisk.vhd')]"
            }
          }
        }
      },
      "tags": {
        "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "agentpool1",
        "resourceNameSuffix": "[variables('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'/cse', '-agent-', copyIndex(variables('agentpool1Offset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "location": "[variables('location')]",
      "name": "[variables('masterAvailabilitySet')]",
      "properties": {
        "managed": true,
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 3
      },
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetCidr')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnet')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('nsgName')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22-22",
              "direction": "Inbound",
              "priority": 101,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "allow_kube_tls",
            "properties": {
              "access": "Allow",
              "description": "Allow kube-apiserver (tls) traffic to master",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443-443",
              "direction": "Inbound",
              "priority": 100,
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "location": "[variables('location')]",
      "name": "[variables('masterPublicIPAddressName')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[variables('masterFqdnPrefix')]"
        },
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[variables('masterLbName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('masterLbIPConfigID')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
              },
              "protocol": "tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "intervalInSeconds": "5",
              "numberOfProbes": "2",
              "port": 443,
              "protocol": "tcp"
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "masterLbLoopNode"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "backendPort": 22,
        "enableFloatingIP": false,
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "frontendPort": "[variables('sshNatPorts')[copyIndex(variables('masterOffset'))]]",
        "protocol": "tcp"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "nicLoopNode"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                }
              ],
              "primary": true,
              "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig3",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig4",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig5",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig6",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig7",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig8",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig9",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig10",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig11",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig12",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig13",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig14",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig15",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig16",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig17",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig18",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig19",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig20",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig21",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig22",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig23",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig24",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig25",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig26",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig27",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig28",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig29",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig30",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          },
          {
            "name": "ipconfig31",
            "properties": {
              "primary": false,
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('username')]",
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
          "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SRQW+jMBCF7/wKy+dFaK/WKpe9tIe0kSL1EvUwmClYsceWPRDx7yunQJomKdzwe+/z+A0E84YxGU9KyOGvLI6GGiXkzjeycMjQAIMqhCBwqIQ89jWWSXfY9BajnIQUQF/UMTG6LFmo0aacFoINRiW0J47elsEC4flcexc8IbES1+wiBdQ52/nEL8gnH49KcOxzLnPAEMaJXj6eL3/GQZvVf1mOhIzpaQwY8+8+oN7MRu2dg1zAQVbd7JB/hLwg3ycrxDYpcfiG3M+e/54+TLuZnYO3vcOt74mnca9GRtblBSIXgxAuR3bAnRKyQtbVPdvCGSCW1tRnlkV+CBogVtbU1Y1vJrlk1rIngBaJqy0QtNg8N0hseCz3yGyovXpFRGheyY7L8r76+Lm5+zXk5Z8vX4Dhlz7WunhMu1vKbSHrgPVmPgMAAP//6fKK/HMDAAA=\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySsY6jMBCGe57Ccn0IXWud0qS5K3IXKdI10RaDmSVW7LFlD0S8/coJsJsNWZYO+OYb/t9AMP8xJuNJCdn/lMXZUKOE3PtGFg4ZGmBQhRAEDpWQ567GUnvi6K3FWDogaDHKkUgB9IylITG6/MpCjTZljRBsMCoxKspggfD6XHsXPCGxEk+WFCmgzpKTT/wX+eLjWQmOXRZkHAxhHNeU3/jifBkHbcZ+ZS4SMqbfQ8CYbw8B9WYCtXcOcjdHWZ0mQv4QcsH9Ms5AbJMSxw/u7QzvbuzW06tpN9NE723ncOc74jHIXRhkXb7L5AwI4fLIHvikhKyQdbWEzZ4eYmlNfXVZ5KeiHmJlTV09cJPJJbM2ewFokbi6BW7+NEhseCgPyGyovUsREZp/ZIf5WG99fD7T5Rryb3FdPgvDF32sdfHctljKYyHrgvVm3gIAAP//7hHuXJ8DAAA=\n\n- path: /etc/kubernetes/manifests/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7RVwY7jNgy95ysI51Cg2HiwtyK3aQsUBabbRbrTHoo5KBJjC1FIV6ST8d8Xkhw7mWSAHqY3JabI954eSdP5PzGKZ1qD6Z3Xev+D1J4fjp+3qOYzLOFb6wW8QMR/eh/R1Yu9J7eGrxy8HRZL+JnpO4UGCaNRLGkAj0gqsOMIJoR8GUUFPMGmnDdo0R/RgahpsF7wwesf6SjrBcAKqjdx1SL2oXxcwhM30LED2xpqUMDonFY6JkEIeMSQM+XT+m3AAgAgonAfbUmbYpvIfbeGqsq/U6nNGAJVx04qcIySCB+M2nYmpgyGBpB+e84JvEsY5dOU6tR62yYtLZN4USSFk9cWtEXY/Pj4E3RZ1Hq8MaODv0v1l8VEP//xELipPo1nUaO9VEmM31CNM2puVTh/+W/0bxDcKziCKj4I3MDpWprtkAlWMojiYb3vt7jqIr8OFTABkuvYJ7NwBMF49BblEvEXpvJYvWDMQG4TveSAI8ZtDsgAxj/f5whLsBwRHr/+Wv68R3qCl1if4d1SNr22SOqtUXRXrrAY1XgCYlpN1njePEFntJX6Xaa/JESXdK9KjOSI6ezP583TRLF6MJ3/PhH8ywdnTXTFrp6aego5lsavZkulVxqhw5bdkBxsmXa+OZhu6jVPkJUvsOo7LfYRuk91ZaQ6TqI0BIApDGC6LnjMGk83E7jstQuEFZA5oHTGYj1lQsBDpwOIRk9NAmUNwRaT9C6lFAxoNb/adN3NhUqm6UuGfFnzolHvyipoI+pZ0/9LxFLlamykaczaYrwWLecy5ABfFSn5Ig/VPJhG6BnehyGdA+aKKXRcR0mjHADSch8cfPn9W3oeTzb0Lm2hzOgRbPL1Ku+Y5Azl0o4XLMdWHNlcT8b63dGY1KJmFXuiZJApTfB7LAMuWa81CrtUrCeHEXRy6MmHAMQ65pq3I10uyDvrsBjrehmOHXuzEP8NAAD//+gVlJa+BwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySwc6bMBCE7zyF5XMR6tWqfqnqpf8hbaRIvUQ9LGZLLOy1ZS9EvH1lCqRJoQk3mJnPy6whmB8Yk/GkhBw+yqIz1Cghj76RhUOGBhhUIQSBQyVk19dYQjAJ44BRzkIKoFc1jYnRZclCjTbltBBsMCqhPXH0tgwWCKfv2rvgCYmVuGcXKaDO2YtP/A356mOnBMc+5zIHDGGc6eX+fPkxDtqsfspyJGRMX8eAMb+eAuq3xai9c5ALOMvqsjjkByFvyJ+zFWKblDj/hfx8fD9Nni+efpn2bXEO3vYOD74nnse9GxlZlzeIXA1CuBw5Al+UkBWyrrZsK2eAWFpTTyyLvAsaIFbW1NU/vpXkknmavgK0SFwdgKDF5r1BYsNjeUJmQ+3df0SE5jvZcV3fw3nJ6273QB+mEf+U+Lju7e7yjZniKzP8p8RnBe7TNptccC6ZlwGvlbnZ1z58Ku53AAAA//+XfMNr4AMAAA==\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRsW7zMAyEdz8Fkd3w/w9ZhKJAxw5pAwTozkiEIySiXJFy4LcvZMdOWjRtR5LH43cSdv6NkvjIBvr/1dGzM7CNrgqk6FDRVACMgQwc855qdC5yHZCxpXQZSYd2nssgSqEC6G9cpSNbfA5R9IX0HNPRgKZMFYCNrOiZkhRF/dMtAB+wJQMPZZyYlOSpaDaTZNeRfRx1iSTmZGn0nBrvmUSXGsB22cA6LHWgENNgYP1v48dmH0850CZmntdmuJFLLpuhCLaoBwOrhtQ2V7ZmEq4WBnSvfBqW6FfHIP47ux5Tc/L75ozYEmsz5XTPjli9DvWOVD239y9MGT697A18+Y7x1GW9+y3FV9x7Bn/n/ggAAP//ovMbJ38CAAA=\n\n\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWW2tjNxB+P79C+F1ep92AK+pCmk3bh2Y3JFAoLISxNOujWrfq4rX31xfpHNvnYgcTNlC9WGdGo2/mm4sMTv6FPkhrGNlcVWtpBCNP6DeS4w3nNplYaYwgIAKrCDGgkZEawYWIvhUEBxwZWacl0rALEXVFiIIlqpBtSNF4gxHDVNp3XKVsTEMDw8gk+oSTchKEsEaDgRX6ad9MW4GMPCK3hkuFFaW06rrvl8CnkGJtvfwGUVozXc+L5eZqiRH20d028I9W4YnQGv/ZPkL6VcaaGjBm93Yx3ZmQPN5tZYih8klhYBUl4OTv3iZX8CjBbUSTIw3lE5zLG4/BJs+xPSTQKbvTaGJWbtAvW8UKY/lVMjSbrxB5XXbJCYhYtq4IR9CTyRgJNy0IPZZA+2lFu3NWXObGd0jlr9IIaVb/y4xahY/4JYPsiX0hxIqQcZ1eEEtIy3+Qx1I6J9v48uYdpmM4GHokv47B/snGsT/6jl3iaXDIM7SzPrYllreMzGcFJoJfYXxoRfMfKkICKuTR+tbjeaDgXAcrB99E++HQTD02jo14qMazfIxuf8s6e2EYD/jc0+bRKckhMHI1YkbnzvyzE8zpcCJqpyBia9QhIi/Vsz9HCCFgjI2lCzqHA69RJIV+CsrVMCCAexklB0WdFawZUYTsAyu5twp9/05K1rhj5LY1vcn0hk9G7Q6Y1mUb6xk5kFru7bXSx2F15sWtiSAN+g6a1LBCRn4+er6v8SeH/JcDKrdagxHH0CmZvNvfP+lKKW2m8KJDRkhag989g5Ps8+Tz5GgwaqNm9Ub5UfhvwhB7MkK4S7lzdE+oUVu/Y+Tq/exedjRKavnqC06xVRL0iEF+u4gxZ8VzGYYDyrhLi/lMD6S4jR6Kbja9HiobDxfFwZN27YH3I3WsPYbaKrG4HmiOj/PiTG4PNXTugLNKUYdeWrH4cZbX0LkQpc4FvMCtswZNlKDOFcThFXxdWVyfyepPF1bFRfZoNt0kb0Al/M1b3b/vi0Ql2jd2JH+AWLPDaJpmDjrHGkru/35++PTh+ePN/d33Rysj+SXIp4eb2z1u/vv01JvEeeV3ZjAAbWBESZO21X8BAAD//0SxZ2rFCwAA\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xYS2/jNhC++1cQ7ll+ZJHdQFgHCOKgG2yTGnXa+4QcS4QpkuHDjffXF5RkWZRsx14URX0T5/VxHt9IBs3/QmO5kinZTAdrLllKlmg2nOIdpcpLNyjQAQMH6YAQCQWmZO1fMWHS1gdWA92d2q11WAwIEfCKwgYbUkqMRId2xNWYCm8dmsRWYVIydMbjsNQExpQsQEKGZhSbFYphSv5AqiTlAgdJkgxOwY9wR2hubAJaR9e4BGOsWWXku3/F+fPyggxZjTTgqSM9LlLydV15qS/wuLgdEKKVcSXwpHa9AxwEKbn+VD0Y5RRVIiV/zhexcuKoPmXwch8MLAqkTpljKepmG7S24830FR3s8j5HLdS2wE7L/FwjHC7Spin21aSX62R/eCLfBrXgFGxKrnrXLsDR/LcW3mM4ekgcFlqAw9pP6/plV0upHDiuZOOXEEtzZF6gGYHQOXS6nRruOAWRaMVSMhzWZiICdxzeJak+cB1Cdukq4a9WXHK33YfVit1Jx+96gtBYuEJjkM294TJbVrfkMnvMpGqOH96R+pCQtmlC/kae5S4l08mkdV7Fq2O9oCnSSFhnZRmVsv0ry/rwrg1aG9dgH3mN23SXzZ6YEKXRQHBOHuUB8QaExwN+S8/dylQ/p7QSKtt+LwNHxcqVdaGLBztNEYK3kdd47+smuQusaX+XYjvoA35459Y1bauEL7DlpzNCVMkVzxov1eMT6PbVegy3jxlAgkhJaK5B48IBl2haQcFkrWQlZJgkTBXA5ezrPhOBUgW6+6pz56X8djTsmEmbBF6bTSeT608d4WZ21Tmp7pMwbmbjzp33mryADGs23kMJvKyR3jZqgm9QorULo16xnZ8VcOENvuQGba4ES8l1S5o7p39FF/eKBpenZDjOEYTLfyQhNJN22BmCwN83k5t4NgKPhIJ8e3lZtARhWDiIOQrYLsPSZDYln9um1lOK1rZwTltSxwtU3jWm+zvs698uf7OnduluCr8ocZcF6nVRyL9QFETEIPEuu9iho/qE02rfVT+DwPjBIp4sU2N2pEDTny7Qp8lZJTBolTc0phzBC+46JFRgocw2JdMvkyfekhh882i72lT7Mq/FQR+Ri4pInsILYlT103xCSBEsFmUeuxN4gh56kyxU5pR1DI2JBZWr+ckBD3oGrQPj5tIWYN9m8TYsuSJ+XHeZBGiOieU/MFDPpCOVKgRQYtM5D+sXzWx69WU0GU1G018O0VatNOYyAcbMCIyG8Zkm+vM56kJlyQooF9xtZ8kp5ps/L5/AvsXM10xaSN3ZBHB4WC+f++ND/+G4H2vaj5uS9Pbex02b0ILNpBVKrb1ur3iGK/DCjeyGjj5aeKSpJLkdM9yMpReiU05vxKxZHXVZuu36r0JJy6Y6E1Bvl5Uq5dIOu6xz/uY5ulMdGd4cv1Wu/7t93Esq+d/t4xrq2ePYwX1sP164Z64vWDOHt0zLA5N2oQSn2/BtWfZpLbDRHxTPh95HpWLY/yIIn6udDy1lUyK49O+DfwIAAP//KA420AwRAAA=\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUy27bMBC8+ysI3RklVyEuULgBemkawEDva2psE+ZDWS5d++8LSrUtOYmb8kTMLoczswSps7/AycbQKBwEoWxTvX9YQehhtrOhbdQ3go9hCZl5CLUk1MyUcrSCS2Wn1C6vwAGCdGdjbVxOAtYJvLcGjaqEM6q+00TfxYAgTX9IdxwPx74iFtyoEFvMlArkcdVRoNSROeHpmAR+ljqYIkLgO0eCQdBYaFljsbdlvJGi1OmKvhQdmKSkdIK02uE4tGuODnfTNDyVMM7csSvnIzfq6TWTO+N7cnkaVVlYr2GkUc9xabZos8PsZCAI2QAeyTDRewrtxaVWVb09duCiqBrBU7taVVqXFhPD2m7m9Z64dnZVF8xB6kutmh46TdrYluePpW0xIAvb8per5jVIMkNvSJDmT4cObD2CkFuwFWvIvcT2awhR+nzn0ySsp03J5/GS7veTtWUHM7rtncczLEaKmQ1GD6GArxlJJphSpsuNeri/92c0wWS2clzEIDjIuL1ju7cOG7SNKqovQ40ue/yIOYz5tfIFeSHZNqqqIaZOydUGLKka0Q4+UnK6L+ltTDIRTu3P4I5Xd77DfonsLT3E6Ev9v+k/81TGExlq/7qmOH2G/I68m+BDnqMnXxp7KeNp/JWWE9dpS4zaUJ+gXVtDkxBuJHyb+zO2PzB9m/ijcd0YVvl4lnAw5Vc5Hygf+NVPFFOjnA35MPsTAAD//zcsf+33BQAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xUT08bPxC976cY5b4J6HcB61ckChIXiqKk7X3inSZubI9rz6ZsP33lJVl2IYRQFak+WfP3zfMbYzBfKSbDXsHmtFgbXymYU9wYTZdac+2lcCRYoaAqACwuyKZ8A1ifpRJDULCuFxQ9CaWywrRaMMbqIaJzjA1PtK2TUCzTQ3kFI4k1jdpIrCr2Dj0uKY6HaY4rUjAjzV4bSwWAR0cvds3OFFBvI8rUJCFXlGVZ9IeNC9RjrGXF0fxCMezH67O23+Z0QYI7Lq4eQM/Y0kfjK+OXAz4OQvkHyIpsaUbfMgYM5iZyHQ7MXgA8m7obcocIK2d8kerFd9KSVFHCXtX8nWd6qsmXxXg0e6+9xJ/AToF0xhE4SguobK8Kzk7anoJxSTJtTecn59mYyJIWjsfJQ5pACu64olzkGU10L+TzNT2R7zUFy42jQ2v8Pkv6vkRHCtZoTApOn3HpUPTqtjfhEfSSCxaFtgV6TOVjB7WO2eUdzHw0e0HjKXYVSsC47NUroSxXhKElfsVJPqxEgppMdsZxjwK1lVQ+xuGSFPz/iON6B2MeSF8MA6e1tVO2RjcKLu1PbFLnt2ZDnlKaRl7QIzCADOSGpG8CCCgrBaPJaGjtq7tr7I0YtNdksZlndVRJwX/9CDGOuJZ9zoMCeWw6YLJje7oPTogsrNkq+Hw17eyREtdRU+qPGelHTUnScHQd6v18X02/zLYZF4MMR45jsz/pU+vbl2eNM2/pfZvj39p4kJQG3/fda9R7rmg+WLt88tfz5GfgpMAaX98XvwMAAP//QbpZm2wIAAA=\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8yQsWorMRBFe33F4F77cPdQmzaYEEPaMJbGzrCr0TIaGZKvD7veBOwYV8Gklu6dew6O/EJauUiAakXxQF3/v3Zc/h3XOzJcu54lBdieHh8GrNVlMkxoGByAYKYAifbYBnMAKFIMjYvU6Rm+auOU7KbKrm87UiGj+Q5Xv6T9/CfAyrTRygEMuKNhqTkPxaFVI/WV9MiRvjOjliNPOKThIoIfTcknrr0bUTGTkc7dEeMbyyGXRAE2Rch5791vmWmSUfBAyY9KmVv+6eg+mAsExliamL2PFODpNOn18Xl7RxHVUBJq+ksmtsummyqucN60c8XCPGrPA90Ffj50Ad+3zbzkjPgzAAD//wD1SX0IBAAA\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUXWvbShB9169Y/C4Hc3PhslwCbmKSQJwaOy3tUxivpvY2+9WdWWP31xcpsaKvhuQhhepJu3uOzjkzo4WgP2Mk7Z0Uu0n2oF0hxQrjTiucKuWT48wiQwEMMhPCgUUpWBuD8WlJARRK8ZDWmNOBGG0mhIE1GioZojqJDhlprP2JMokYY06PIlKMOCYcVUgoCu8sONhgHLdp1hclduYoRZztNTGNsjzPs2aCuAY1hsRbH/VPYO3d+OG/ir6brJHhGPD80cPSG/ygXaHd5qWQfyZL9AaX+K2UgaAvo0/hhUCZEL0otfOjLSisdhml9XdUTDLLxWB/X9vVbrW789KqYbNoEIIUWzS2WnXE3rOmbbG8wGD84fcBKaAqHQcfubKe982WZ1Kcnk7+Oa3WDHGDvKh2axihQcU+viI+HwLWXbxe9IqMe0ZXvlJnhi+qMBY7P+jfXHdGGwwwPrpvpiqfZrJ+usGExw9X762hv+1ChVDeMWiHsdbIBbrds+BxGu6ub25my/vb6Xy2WkzPZzVAiB2Y1LsLB9lX16u7j8uv9/Pplz5/9P9zke8qj3PYX2liHw9noxqvLWxQih54FVCd1Sijd+iQaBH9GmVDbMscLpGbW0IE4K0UJ0dS+6ye/X8b+9pp1mAu0MBhhcq7gqSYNACsLfrEA2e9hh1VqFn1ujGLzr/3wkciQqHfnLpmvW/siORTVEhNExF/JCSmtjEV0kCDzxeflk/wsxbcovXxMMCYVwdDJKOtfrXqTQl+k2SL4XyBq9bdWD7lrda5VTxJYbRL++xXAAAA//9fQ5xvoQgAAA==\n\n- path: /etc/kubernetes/addons/azure-cloud-provider-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7yQMW/jMAyFd/0KIouXUw7ZDtrubuieAl2CDLT8mqqRJYOkDDS/vrANZClQdCi6SiTf+z7vveMpPUE01RJIeo57bvZSJd3YUi376x/dp/p7PvQwPrhrKkOg/7mpQY41w40wHtg4OKLCIwLpmxrGwLcm8DHXNvhJ6pwGiCPK3CPrMk10bT2kwLBmxO2qV8icIgLtTBp2TlqGBueJp/QgtU0a6NR1Z0ck0NokYn1RRIHp+jFDeg1LBp26C6z71UUBG7qz+wbqf6kMqVx+Ar5mHPG8rHx0T3cln1B8qZq2/hXRVs1bzuNW5G+MtRW7H5kWa2oo5uea2wjfp7LBLQM68VJ+YfNbnnsPAAD//990ZYZlAgAA\n\n\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates= --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=',variables('registerWithTaints'),'\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n- path: /etc/systemd/system/kms.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SQsW4yMRCEez/FvYDxX/46yUWipEgLRCkIhTEDrM5nX3bXEHj66I6kOUVKY3lGn2alb/OaSbfmCRKZBqWSfbhVRteLWeKjEkP8vsQOvBDwmSLMw0HBPkMvhTtbcqKMhQY+Qo3ZrO7U1qyvA7xQPySYJUQDqw/pEq5i1tSjVF2N3QrR/zPPn4hT9K4Kux1ld7/acM3Nu2kaazPUn4rodzyXVHt4VwZtx2dWQ6Pr6g6coZB2ln+BRZKLYBUXgx0/dKAYFLKIrO3fyGzyHNgl2rlLCEdkbefFhDNpuJ1c91/spN12vbRpXBxVvmTRkNLWvIWs2D9efV+Tkq0C/hH+FQAA//884M3mwQEAAA==\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -e\n\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n    sed -i \"s|<kubernetesAddonManagerSpec>|',variables('kubernetesAddonManagerSpec'),'|g\" \"/etc/kubernetes/manifests/kube-addon-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g; s|<kubeClusterCidr>|',variables('kubeClusterCidr'),'|g\" \"/etc/kubernetes/addons/kube-proxy-daemonset.yaml\"\n    sed -i \"s|<kubernetesKubeDNSSpec>|',variables('kubernetesKubeDNSSpec'),'|g; s|<kubernetesDNSMasqSpec>|',variables('kubernetesDNSMasqSpec'),'|g; s|<kubernetesExecHealthzSpec>|',variables('kubernetesExecHealthzSpec'),'|g; s|<kubernetesKubeletClusterDomain>|',variables('kubernetesKubeletClusterDomain'),'|g; s|<kubeDNSServiceIP>|',variables('kubeDNSServiceIP'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n    sed -i \"s|<kubernetesHeapsterSpec>|',variables('kubernetesHeapsterSpec'),'|g; s|<kubernetesAddonResizerSpec>|',variables('kubernetesAddonResizerSpec'),'|g\" \"/etc/kubernetes/addons/kube-heapster-deployment.yaml\"\n\n\n    sed -i \"s|<kubernetesDashboardSpec>|',variables('kubernetesDashboardSpec'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPURequests>|',variables('kubernetesDashboardCPURequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryRequests>|',variables('kubernetesDashboardMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPULimit>|',variables('kubernetesDashboardCPULimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryLimit>|',variables('kubernetesDashboardMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n\n\n\n    sed -i \"s|<kubernetesTillerSpec>|',variables('kubernetesTillerSpec'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPURequests>|',variables('kubernetesTillerCPURequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryRequests>|',variables('kubernetesTillerMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPULimit>|',variables('kubernetesTillerCPULimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryLimit>|',variables('kubernetesTillerMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMaxHistory>|',variables('kubernetesTillerMaxHistory'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesControllerManagerConfig>|\\\"--allocate-node-cidrs=false\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.240.0.0/12\\\", \\\"--cluster-name=tdbank\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--feature-gates=\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesAPIServerConfig>|\\\"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,AlwaysPullImages\\\", \\\"--advertise-address=<kubernetesAPIServerIP>\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/manifests/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-servers=https://127.0.0.1:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--repair-malformed-updates=false\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesSchedulerConfig>|\\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--profiling=false\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesAPIServerIP>|',variables('kubernetesAPIServerIP'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n- path: \"/opt/azure/containers/mountetcd.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('mountetcdScript'),'\n\n- path: \"/etc/systemd/system/etcd.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/opt/azure/containers/setup-etcd.sh\"\n  permissions: \"0744\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -x\n    source /opt/azure/containers/provision_source.sh\n    ETCD_VER=v',variables('etcdVersion'),'\n    DOWNLOAD_URL=',variables('etcdDownloadURLBase'),'\n    retrycmd_get_tarball 60 1 /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz ${DOWNLOAD_URL}/etcd-${ETCD_VER}-linux-amd64.tar.gz\n    tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /usr/bin/ --strip-components=1\n    systemctl daemon-reload\n    systemctl enable etcd.service\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n\n\nruncmd:\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- wait_for_file 1800 1 /opt/azure/containers/certs.ready\n- /opt/azure/containers/setup-etcd.sh > /opt/azure/containers/setup-etcd.log 2>&1\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent \n- /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n- /opt/azure/containers/mountetcd.sh\n- /bin/chown -R etcd:etcd /var/lib/etcddisk\n- systemctl stop etcd\n- systemctl daemon-reload\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart etcd\n- MEMBER=\"$(sudo etcdctl member list | grep -E ',variables('masterVMNames')[copyIndex(variables('masterOffset'))],' | cut -d',variables('singleQuote'),':',variables('singleQuote'),' -f 1)\"\n- sudo etcdctl member update ${MEMBER} ',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\n- retrycmd_if_failure 5 5 10 curl --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/etcdclient.crt --key /etc/kubernetes/certs/etcdclient.key --retry 5 --retry-delay 10 --retry-max-time 10 --max-time 60 \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\"/v2/machines\n- apt_get_update\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n- /usr/lib/apt/apt.systemd.daily\n\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- apt-mark unhold walinuxagent\n- touch /opt/azure/containers/runcmd.complete\n\n'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[variables('sshPublicKeyData')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "dataDisks": [
            {
              "createOption": "Empty",
              "diskSizeGB": "[variables('etcdDiskSizeGB')]",
              "lun": 0,
              "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
            }
          ],
          "imageReference": {
            "offer": "[variables('osImageOffer')]",
            "publisher": "[variables('osImagePublisher')]",
            "sku": "[variables('osImageSku')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        }
      },
      "tags": {
        "creationSource": "[concat(variables('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
        "orchestrator": "[variables('orchestratorNameVersionTag')]",
        "poolName": "master",
        "resourceNameSuffix": "[variables('nameSuffix')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersionDefault')]",
      "copy": {
        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
        "name": "vmLoopNode"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' ',variables('provisionScriptParametersMaster'), ' MASTER_INDEX=',copyIndex(variables('masterOffset')),' /usr/bin/nohup /bin/bash -c \"stat /opt/azure/containers/provision.complete > /dev/null 2>&1 || /bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
        },
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {},
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "agentStorageAccountPrefixes": {
      "type": "array",
      "value": "[variables('storageAccountPrefixes')]"
    },
    "agentStorageAccountSuffix": {
      "type": "string",
      "value": "[variables('storageAccountBaseName')]"
    },
    "agentpool1StorageAccountCount": {
      "type": "int",
      "value": "[variables('agentpool1StorageAccountsCount')]"
    },
    "agentpool1StorageAccountOffset": {
      "type": "int",
      "value": "[variables('agentpool1StorageAccountOffset')]"
    },
    "agentpool1SubnetName": {
      "type": "string",
      "value": "[variables('agentpool1SubnetName')]"
    },
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "primaryAvailabilitySetName": {
      "type": "string",
      "value": "[variables('primaryAvailabilitySetName')]"
    },
    "resourceGroup": {
      "type": "string",
      "value": "[variables('resourceGroup')]"
    },
    "routeTableName": {
      "type": "string",
      "value": "[variables('routeTableName')]"
    },
    "securityGroupName": {
      "type": "string",
      "value": "[variables('nsgName')]"
    },
    "subnetName": {
      "type": "string",
      "value": "[variables('subnetName')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    }
  }
}
